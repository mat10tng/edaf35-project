
;; Function get_buddy (get_buddy, funcdef_no=0, decl_uid=3107, cgraph_uid=0)

get_buddy (char * ptr, size_t kval)
{
  sizetype D.3183;
  long int D.3182;
  long int D.3181;
  int D.3180;
  int D.3179;
  long int D.3178;
  long int base_addr.3;
  char * base_addr.2;
  long int ptr.1;
  char * base_addr.0;
  void * D.3173;
  long int _6;
  int _8;
  int _9;
  long int _10;
  long int _11;
  sizetype _12;
  void * _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  base_addr.0_1 = base_addr;
  ptr.1_3 = (long int) ptr_2(D);
  base_addr.2_4 = base_addr;
  base_addr.3_5 = (long int) base_addr.2_4;
  _6 = ptr.1_3 - base_addr.3_5;
  _8 = (int) kval_7(D);
  _9 = 1 << _8;
  _10 = (long int) _9;
  _11 = _6 ^ _10;
  _12 = (sizetype) _11;
  _13 = base_addr.0_1 + _12;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _13;
;;    succ:       EXIT

}



Partition map 

Partition 1 (base_addr.0_1 - 1 )
Partition 2 (ptr_2(D) - 2 )
Partition 3 (ptr.1_3 - 3 )
Partition 4 (base_addr.2_4 - 4 )
Partition 5 (base_addr.3_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (kval_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )


Partition map 

Partition 0 (ptr_2(D) - 2 )
Partition 1 (kval_7(D) - 7 )


Live on entry to BB2 : ptr_2(D)  kval_7(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (ptr_2(D) - 2 )
Partition 1 (kval_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (base_addr.0_1 - 1 )
Partition 1 (ptr_2(D) - 2 )
Partition 2 (ptr.1_3 - 3 )
Partition 3 (base_addr.2_4 - 4 )
Partition 4 (base_addr.3_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (kval_7(D) - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )

get_buddy (char * ptr, size_t kval)
{
  sizetype D.3183;
  long int D.3182;
  long int D.3181;
  int D.3180;
  int D.3179;
  long int D.3178;
  long int base_addr.3;
  char * base_addr.2;
  long int ptr.1;
  char * base_addr.0;
  void * D.3173;
  long int _6;
  int _8;
  int _9;
  long int _10;
  long int _11;
  sizetype _12;
  void * _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  base_addr.0_1 = base_addr;
  ptr.1_3 = (long int) ptr_2(D);
  base_addr.2_4 = base_addr;
  base_addr.3_5 = (long int) base_addr.2_4;
  _6 = ptr.1_3 - base_addr.3_5;
  _8 = (int) kval_7(D);
  _9 = 1 << _8;
  _10 = (long int) _9;
  _11 = _6 ^ _10;
  _12 = (sizetype) _11;
  _13 = base_addr.0_1 + _12;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _13;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; base_addr.0_1 = base_addr;

(insn 7 6 0 (set (reg/f:DI 59 [ base_addr.0 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:24 -1
     (nil))

;; ptr.1_3 = (long int) ptr_2(D);

(insn 8 7 0 (set (reg:DI 60 [ ptr.1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ptr+0 S8 A64])) malloc.c:24 -1
     (nil))

;; base_addr.2_4 = base_addr;

(insn 9 8 0 (set (reg/f:DI 61 [ base_addr.2 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:24 -1
     (nil))

;; base_addr.3_5 = (long int) base_addr.2_4;

(insn 10 9 0 (set (reg:DI 62 [ base_addr.3 ])
        (reg/f:DI 61 [ base_addr.2 ])) malloc.c:24 -1
     (nil))

;; _6 = ptr.1_3 - base_addr.3_5;

(insn 11 10 0 (parallel [
            (set (reg:DI 63 [ D.3311 ])
                (minus:DI (reg:DI 60 [ ptr.1 ])
                    (reg:DI 62 [ base_addr.3 ])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))

;; _8 = (int) kval_7(D);

(insn 12 11 13 (set (reg:DI 71)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 kval+0 S8 A64])) malloc.c:24 -1
     (nil))

(insn 13 12 0 (set (reg:SI 64 [ D.3312 ])
        (subreg:SI (reg:DI 71) 0)) malloc.c:24 -1
     (nil))

;; _9 = 1 << _8;

(insn 14 13 15 (set (reg:SI 72)
        (const_int 1 [0x1])) malloc.c:24 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg:SI 65 [ D.3312 ])
                (ashift:SI (reg:SI 72)
                    (subreg:QI (reg:SI 64 [ D.3312 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))

;; _10 = (long int) _9;

(insn 16 15 0 (set (reg:DI 66 [ D.3311 ])
        (sign_extend:DI (reg:SI 65 [ D.3312 ]))) malloc.c:24 -1
     (nil))

;; _11 = _6 ^ _10;

(insn 17 16 0 (parallel [
            (set (reg:DI 67 [ D.3311 ])
                (xor:DI (reg:DI 63 [ D.3311 ])
                    (reg:DI 66 [ D.3311 ])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))

;; _12 = (sizetype) _11;

(insn 18 17 0 (set (reg:DI 68 [ D.3313 ])
        (reg:DI 67 [ D.3311 ])) malloc.c:24 -1
     (nil))

;; _13 = base_addr.0_1 + _12;

(insn 19 18 0 (parallel [
            (set (reg/f:DI 69 [ D.3314 ])
                (plus:DI (reg/f:DI 59 [ base_addr.0 ])
                    (reg:DI 68 [ D.3313 ])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 20 19 21 2 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; return _13;

(insn 22 21 23 (set (reg:DI 70 [ <retval> ])
        (reg/f:DI 69 [ D.3314 ])) malloc.c:24 -1
     (nil))

(jump_insn 23 22 24 (set (pc)
        (label_ref 0)) malloc.c:24 -1
     (nil))

(barrier 24 23 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ptr+0 S8 A64])
        (reg:DI 5 di [ ptr ])) malloc.c:23 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 kval+0 S8 A64])
        (reg:DI 4 si [ kval ])) malloc.c:23 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 59 [ base_addr.0 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:24 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 60 [ ptr.1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ptr+0 S8 A64])) malloc.c:24 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 61 [ base_addr.2 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:24 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 62 [ base_addr.3 ])
        (reg/f:DI 61 [ base_addr.2 ])) malloc.c:24 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 63 [ D.3311 ])
                (minus:DI (reg:DI 60 [ ptr.1 ])
                    (reg:DI 62 [ base_addr.3 ])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 71)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 kval+0 S8 A64])) malloc.c:24 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 64 [ D.3312 ])
        (subreg:SI (reg:DI 71) 0)) malloc.c:24 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 72)
        (const_int 1 [0x1])) malloc.c:24 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 65 [ D.3312 ])
                (ashift:SI (reg:SI 72)
                    (subreg:QI (reg:SI 64 [ D.3312 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 66 [ D.3311 ])
        (sign_extend:DI (reg:SI 65 [ D.3312 ]))) malloc.c:24 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 67 [ D.3311 ])
                (xor:DI (reg:DI 63 [ D.3311 ])
                    (reg:DI 66 [ D.3311 ])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 68 [ D.3313 ])
        (reg:DI 67 [ D.3311 ])) malloc.c:24 -1
     (nil))
(insn 19 18 22 2 (parallel [
            (set (reg/f:DI 69 [ D.3314 ])
                (plus:DI (reg/f:DI 59 [ base_addr.0 ])
                    (reg:DI 68 [ D.3313 ])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:24 -1
     (nil))
(insn 22 19 26 2 (set (reg:DI 70 [ <retval> ])
        (reg/f:DI 69 [ D.3314 ])) malloc.c:24 -1
     (nil))
(insn 26 22 29 2 (set (reg/i:DI 0 ax)
        (reg:DI 70 [ <retval> ])) malloc.c:25 -1
     (nil))
(insn 29 26 0 2 (use (reg/i:DI 0 ax)) malloc.c:25 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function split_block (split_block, funcdef_no=1, decl_uid=3110, cgraph_uid=1)

split_block (size_t kval)
{
  struct s_block * child_2;
  struct s_block * child_1;
  struct s_block * D.3191;
  unsigned char D.3190;
  unsigned char D.3189;
  sizetype D.3188;
  unsigned int D.3187;
  int D.3186;
  struct s_block * D.3185;
  struct s_block * _3;
  int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _9;
  unsigned char _10;
  struct s_block * _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  child_1_2 = free_list[kval_1(D)];
  _3 = child_1_2->succ;
  free_list[kval_1(D)] = _3;
  kval_4 = kval_1(D) + 18446744073709551615;
  _5 = (int) kval_4;
  _6 = 1 << _5;
  _7 = (sizetype) _6;
  child_2_8 = child_1_2 + _7;
  child_1_2->reserved = 0;
  child_2_8->reserved = 0;
  _9 = (unsigned char) kval_4;
  child_2_8->kval = _9;
  _10 = child_2_8->kval;
  child_1_2->kval = _10;
  child_1_2->succ = child_2_8;
  child_2_8->pred = child_1_2;
  free_list[kval_4] = child_1_2;
  _11 = child_1_2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (kval_1(D) - 1 )
Partition 2 (child_1_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (kval_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (child_2_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )


Partition map 

Partition 0 (kval_1(D) - 1 )
Partition 1 (kval_4 - 4 )


Live on entry to BB2 : kval_1(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) kval_1(D) <-> kval_4

Partition map 

Partition 0 (kval_1(D) - 1 )
Partition 1 (kval_4 - 4 )

Coalesce list: (1)kval_1(D) & (4)kval_4 [map: 0, 1] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (kval_1(D) - 1 4 )
Partition 1 (child_1_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (child_2_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_11 - 11 )

split_block (size_t kval)
{
  struct s_block * child_2;
  struct s_block * child_1;
  struct s_block * D.3191;
  unsigned char D.3190;
  unsigned char D.3189;
  sizetype D.3188;
  unsigned int D.3187;
  int D.3186;
  struct s_block * D.3185;
  struct s_block * _3;
  int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _9;
  unsigned char _10;
  struct s_block * _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  child_1_2 = free_list[kval_1(D)];
  _3 = child_1_2->succ;
  free_list[kval_1(D)] = _3;
  kval_4 = kval_1(D) + 18446744073709551615;
  _5 = (int) kval_4;
  _6 = 1 << _5;
  _7 = (sizetype) _6;
  child_2_8 = child_1_2 + _7;
  child_1_2->reserved = 0;
  child_2_8->reserved = 0;
  _9 = (unsigned char) kval_4;
  child_2_8->kval = _9;
  _10 = child_2_8->kval;
  child_1_2->kval = _10;
  child_1_2->succ = child_2_8;
  child_2_8->pred = child_1_2;
  free_list[kval_4] = child_1_2;
  _11 = child_1_2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _11;
;;    succ:       EXIT

}


Partition 1: size 8 align 8
	child_2_8
Partition 0: size 8 align 8
	child_1_2

;; Generating RTL for gimple basic block 2

;; child_1_2 = free_list[kval_1(D)];

(insn 6 5 7 (set (reg:DI 67)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:31 -1
     (nil))

(insn 7 6 8 (set (reg/f:DI 68)
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 67)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:31 -1
     (nil))

(insn 8 7 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])
        (reg/f:DI 68)) malloc.c:31 -1
     (nil))

;; _3 = child_1_2->succ;

(insn 9 8 10 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:32 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 59 [ D.3315 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 child_1_2->succ+0 S8 A64])) malloc.c:32 -1
     (nil))

;; free_list[kval_1(D)] = _3;

(insn 11 10 12 (set (reg:DI 70)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:32 -1
     (nil))

(insn 12 11 0 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 70)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 59 [ D.3315 ])) malloc.c:32 -1
     (nil))

;; kval_4 = kval_1(D) + 18446744073709551615;

(insn 13 12 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:34 -1
     (nil))

;; _5 = (int) kval_4;

(insn 14 13 15 (set (reg:DI 71)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:36 -1
     (nil))

(insn 15 14 0 (set (reg:SI 60 [ D.3316 ])
        (subreg:SI (reg:DI 71) 0)) malloc.c:36 -1
     (nil))

;; _6 = 1 << _5;

(insn 16 15 17 (set (reg:SI 72)
        (const_int 1 [0x1])) malloc.c:36 -1
     (nil))

(insn 17 16 0 (parallel [
            (set (reg:SI 61 [ D.3317 ])
                (ashift:SI (reg:SI 72)
                    (subreg:QI (reg:SI 60 [ D.3316 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:36 -1
     (nil))

;; _7 = (sizetype) _6;

(insn 18 17 0 (set (reg:DI 62 [ D.3318 ])
        (zero_extend:DI (reg:SI 61 [ D.3317 ]))) malloc.c:36 -1
     (nil))

;; child_2_8 = child_1_2 + _7;

(insn 22 18 23 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:36 -1
     (nil))

(insn 23 22 24 (parallel [
            (set (reg:DI 75)
                (plus:DI (reg:DI 62 [ D.3318 ])
                    (reg/f:DI 76)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:36 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])
            (reg:DI 62 [ D.3318 ]))
        (nil)))

(insn 24 23 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])
        (reg:DI 75)) malloc.c:36 -1
     (nil))

;; child_1_2->reserved = 0;

(insn 25 24 28 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:37 -1
     (nil))

(insn 28 25 29 (set (reg:QI 80)
        (mem/j:QI (reg/f:DI 77) [0 child_1_2->reserved+0 S1 A64])) malloc.c:37 -1
     (nil))

(insn 29 28 30 (parallel [
            (set (reg:QI 81)
                (and:QI (reg:QI 80)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:37 -1
     (nil))

(insn 30 29 0 (set (mem/j:QI (reg/f:DI 77) [0 child_1_2->reserved+0 S1 A64])
        (reg:QI 81)) malloc.c:37 -1
     (nil))

;; child_2_8->reserved = 0;

(insn 31 30 34 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:38 -1
     (nil))

(insn 34 31 35 (set (reg:QI 85)
        (mem/j:QI (reg/f:DI 82) [0 child_2_8->reserved+0 S1 A64])) malloc.c:38 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:QI 86)
                (and:QI (reg:QI 85)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:38 -1
     (nil))

(insn 36 35 0 (set (mem/j:QI (reg/f:DI 82) [0 child_2_8->reserved+0 S1 A64])
        (reg:QI 86)) malloc.c:38 -1
     (nil))

;; _9 = (unsigned char) kval_4;

(insn 37 36 38 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:39 -1
     (nil))

(insn 38 37 0 (set (reg:QI 63 [ D.3319 ])
        (subreg:QI (reg:DI 87) 0)) malloc.c:39 -1
     (nil))

;; child_2_8->kval = _9;

(insn 39 38 40 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:39 -1
     (nil))

(insn 40 39 0 (set (mem/j:QI (plus:DI (reg/f:DI 88)
                (const_int 1 [0x1])) [0 child_2_8->kval+0 S1 A8])
        (reg:QI 63 [ D.3319 ])) malloc.c:39 -1
     (nil))

;; _10 = child_2_8->kval;

(insn 41 40 42 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:39 -1
     (nil))

(insn 42 41 0 (set (reg:QI 64 [ D.3319 ])
        (mem/j:QI (plus:DI (reg/f:DI 89)
                (const_int 1 [0x1])) [0 child_2_8->kval+0 S1 A8])) malloc.c:39 -1
     (nil))

;; child_1_2->kval = _10;

(insn 43 42 44 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:39 -1
     (nil))

(insn 44 43 0 (set (mem/j:QI (plus:DI (reg/f:DI 90)
                (const_int 1 [0x1])) [0 child_1_2->kval+0 S1 A8])
        (reg:QI 64 [ D.3319 ])) malloc.c:39 -1
     (nil))

;; child_1_2->succ = child_2_8;

(insn 45 44 46 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:41 -1
     (nil))

(insn 46 45 47 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:41 -1
     (nil))

(insn 47 46 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [0 child_1_2->succ+0 S8 A64])
        (reg/f:DI 92)) malloc.c:41 -1
     (nil))

;; child_2_8->pred = child_1_2;

(insn 48 47 49 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:42 -1
     (nil))

(insn 49 48 50 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:42 -1
     (nil))

(insn 50 49 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [0 child_2_8->pred+0 S8 A64])
        (reg/f:DI 94)) malloc.c:42 -1
     (nil))

;; free_list[kval_4] = child_1_2;

(insn 51 50 52 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:44 -1
     (nil))

(insn 52 51 53 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:44 -1
     (nil))

(insn 53 52 0 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 95)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 96)) malloc.c:44 -1
     (nil))

;; _11 = child_1_2;

(insn 54 53 0 (set (reg/f:DI 65 [ D.3320 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:46 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 55 54 56 4 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 57 56 58 (set (reg:DI 66 [ <retval> ])
        (reg/f:DI 65 [ D.3320 ])) malloc.c:46 -1
     (nil))

(jump_insn 58 57 59 (set (pc)
        (label_ref 0)) malloc.c:46 -1
     (nil))

(barrier 59 58 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])
        (reg:DI 5 di [ kval ])) malloc.c:28 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 67)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:31 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 68)
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 67)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:31 -1
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])
        (reg/f:DI 68)) malloc.c:31 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:32 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 59 [ D.3315 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 child_1_2->succ+0 S8 A64])) malloc.c:32 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 70)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:32 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 70)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 59 [ D.3315 ])) malloc.c:32 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:34 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 71)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:36 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 60 [ D.3316 ])
        (subreg:SI (reg:DI 71) 0)) malloc.c:36 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 72)
        (const_int 1 [0x1])) malloc.c:36 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 61 [ D.3317 ])
                (ashift:SI (reg:SI 72)
                    (subreg:QI (reg:SI 60 [ D.3316 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:36 -1
     (nil))
(insn 18 17 22 2 (set (reg:DI 62 [ D.3318 ])
        (zero_extend:DI (reg:SI 61 [ D.3317 ]))) malloc.c:36 -1
     (nil))
(insn 22 18 23 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:36 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 75)
                (plus:DI (reg:DI 62 [ D.3318 ])
                    (reg/f:DI 76)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:36 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])
            (reg:DI 62 [ D.3318 ]))
        (nil)))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])
        (reg:DI 75)) malloc.c:36 -1
     (nil))
(insn 25 24 28 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:37 -1
     (nil))
(insn 28 25 29 2 (set (reg:QI 80)
        (mem/j:QI (reg/f:DI 77) [0 child_1_2->reserved+0 S1 A64])) malloc.c:37 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:QI 81)
                (and:QI (reg:QI 80)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:37 -1
     (nil))
(insn 30 29 31 2 (set (mem/j:QI (reg/f:DI 77) [0 child_1_2->reserved+0 S1 A64])
        (reg:QI 81)) malloc.c:37 -1
     (nil))
(insn 31 30 34 2 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:38 -1
     (nil))
(insn 34 31 35 2 (set (reg:QI 85)
        (mem/j:QI (reg/f:DI 82) [0 child_2_8->reserved+0 S1 A64])) malloc.c:38 -1
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:QI 86)
                (and:QI (reg:QI 85)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:38 -1
     (nil))
(insn 36 35 37 2 (set (mem/j:QI (reg/f:DI 82) [0 child_2_8->reserved+0 S1 A64])
        (reg:QI 86)) malloc.c:38 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:39 -1
     (nil))
(insn 38 37 39 2 (set (reg:QI 63 [ D.3319 ])
        (subreg:QI (reg:DI 87) 0)) malloc.c:39 -1
     (nil))
(insn 39 38 40 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:39 -1
     (nil))
(insn 40 39 41 2 (set (mem/j:QI (plus:DI (reg/f:DI 88)
                (const_int 1 [0x1])) [0 child_2_8->kval+0 S1 A8])
        (reg:QI 63 [ D.3319 ])) malloc.c:39 -1
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:39 -1
     (nil))
(insn 42 41 43 2 (set (reg:QI 64 [ D.3319 ])
        (mem/j:QI (plus:DI (reg/f:DI 89)
                (const_int 1 [0x1])) [0 child_2_8->kval+0 S1 A8])) malloc.c:39 -1
     (nil))
(insn 43 42 44 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:39 -1
     (nil))
(insn 44 43 45 2 (set (mem/j:QI (plus:DI (reg/f:DI 90)
                (const_int 1 [0x1])) [0 child_1_2->kval+0 S1 A8])
        (reg:QI 64 [ D.3319 ])) malloc.c:39 -1
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:41 -1
     (nil))
(insn 46 45 47 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:41 -1
     (nil))
(insn 47 46 48 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [0 child_1_2->succ+0 S8 A64])
        (reg/f:DI 92)) malloc.c:41 -1
     (nil))
(insn 48 47 49 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 child_2+0 S8 A64])) malloc.c:42 -1
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:42 -1
     (nil))
(insn 50 49 51 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [0 child_2_8->pred+0 S8 A64])
        (reg/f:DI 94)) malloc.c:42 -1
     (nil))
(insn 51 50 52 2 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:44 -1
     (nil))
(insn 52 51 53 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:44 -1
     (nil))
(insn 53 52 54 2 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 95)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 96)) malloc.c:44 -1
     (nil))
(insn 54 53 57 2 (set (reg/f:DI 65 [ D.3320 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 child_1+0 S8 A64])) malloc.c:46 -1
     (nil))
(insn 57 54 61 2 (set (reg:DI 66 [ <retval> ])
        (reg/f:DI 65 [ D.3320 ])) malloc.c:46 -1
     (nil))
(insn 61 57 64 2 (set (reg/i:DI 0 ax)
        (reg:DI 66 [ <retval> ])) malloc.c:47 -1
     (nil))
(insn 64 61 0 2 (use (reg/i:DI 0 ax)) malloc.c:47 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function find_block (find_block, funcdef_no=2, decl_uid=3115, cgraph_uid=2)

find_block (size_t kval)
{
  size_t i;
  size_t D.3196;
  struct s_block * D.3193;
  size_t _2;
  struct s_block * _5;
  size_t _6;
  size_t _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_4 = kval_3(D);
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _5 = free_list[i_1];
  if (_5 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _6 = i_1;
  goto <bb 8> (<L5>);
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       3
  i_7 = i_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # i_1 = PHI <i_4(2), i_7(5)>
  if (i_1 <= 24)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _8 = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # _2 = PHI <_6(4), _8(7)>
<L5>:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (kval_3(D) - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (kval_3(D) - 3 )
Partition 3 (i_4 - 4 )
Partition 4 (_6 - 6 )
Partition 5 (i_7 - 7 )
Partition 6 (_8 - 8 )


Live on entry to BB2 : kval_3(D)  

Live on entry to BB3 : i_1  

Live on entry to BB4 : i_1  

Live on entry to BB5 : i_1  

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_7
(2147483646) i_1 <-> i_4

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (kval_3(D) - 3 )
Partition 3 (i_4 - 4 )
Partition 4 (_6 - 6 )
Partition 5 (i_7 - 7 )
Partition 6 (_8 - 8 )

Coalesce list: (1)i_1 & (7)i_7 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (4)i_4 [map: 0, 3] : Success -> 0
Coalesce list: (2)_2 & (8)_8 [map: 1, 6] : Success -> 1
Coalesce list: (2)_2 & (6)_6 [map: 1, 4] : Success -> 1
Coalesce list: (1)i_1 & (7)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (4)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 4 7 )
Partition 1 (_2 - 2 6 8 )
Partition 2 (kval_3(D) - 3 )
Partition 3 (_5 - 5 )

find_block (size_t kval)
{
  size_t i;
  size_t D.3196;
  struct s_block * D.3193;
  size_t _2;
  struct s_block * _5;
  size_t _6;
  size_t _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_4 = kval_3(D);
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _5 = free_list[i_1];
  if (_5 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _6 = i_1;
  goto <bb 8> (<L5>);
;;    succ:       8

;;   basic block 5, loop depth 0
;;    pred:       3
  i_7 = i_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # i_1 = PHI <i_4(2), i_7(5)>
  if (i_1 <= 24)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _8 = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       4
;;                7
  # _2 = PHI <_6(4), _8(7)>
<L5>:
  return _2;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	i_1

;; Generating RTL for gimple basic block 2

;; i_4 = kval_3(D);

(insn 6 5 7 (set (reg:DI 62)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:52 -1
     (nil))

(insn 7 6 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (reg:DI 62)) malloc.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = free_list[i_1];

(insn 11 10 12 (set (reg:DI 63)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) malloc.c:53 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 60 [ D.3322 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 63)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:53 -1
     (nil))

;; if (_5 != 0B)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 60 [ D.3322 ])
            (const_int 0 [0]))) malloc.c:53 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:53 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _6 = i_1;

(insn 16 15 0 (set (reg:DI 59 [ D.3321 ])
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) malloc.c:54 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 7 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; i_7 = i_1 + 1;

(insn 21 20 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 22 21 23 6 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 24)

(insn 25 23 26 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 24 [0x18]))) malloc.c:52 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) malloc.c:52 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _8 = 0;

(insn 28 27 0 (set (reg:DI 59 [ D.3321 ])
        (const_int 0 [0])) malloc.c:56 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; <L5>:

(code_label 29 28 30 8 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 31 30 32 (set (reg:DI 61 [ <retval> ])
        (reg:DI 59 [ D.3321 ])) -1
     (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 33 32 0)
deleting block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])
        (reg:DI 5 di [ kval ])) malloc.c:50 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 62)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 kval+0 S8 A64])) malloc.c:52 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (reg:DI 62)) malloc.c:52 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 22)) malloc.c:52 -1
     (nil)
 -> 22)
;;  succ:       7

(barrier 9 8 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 24 9 10 4 9 "" [1 uses])
(note 10 24 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 63)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) malloc.c:53 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 60 [ D.3322 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 63)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:53 -1
     (nil))
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 60 [ D.3322 ])
            (const_int 0 [0]))) malloc.c:53 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) malloc.c:53 -1
     (nil)
 -> 19)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:DI 59 [ D.3321 ])
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) malloc.c:54 -1
     (nil))
(jump_insn 17 16 18 5 (set (pc)
        (label_ref 29)) malloc.c:54 -1
     (nil)
 -> 29)
;;  succ:       9

(barrier 18 17 19)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 19 18 20 6 7 "" [1 uses])
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:52 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              6 (FALLTHRU,DFS_BACK)
(code_label 22 21 23 7 6 "" [1 uses])
(note 23 22 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 23 26 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 24 [0x18]))) malloc.c:52 -1
     (nil))
(jump_insn 26 25 27 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) malloc.c:52 -1
     (nil)
 -> 24)
;;  succ:       4
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 27 26 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 8 (set (reg:DI 59 [ D.3321 ])
        (const_int 0 [0])) malloc.c:56 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              8 (FALLTHRU)
(code_label 29 28 30 9 8 "" [1 uses])
(note 30 29 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 35 9 (set (reg:DI 61 [ <retval> ])
        (reg:DI 59 [ D.3321 ])) -1
     (nil))
(insn 35 31 38 9 (set (reg/i:DI 0 ax)
        (reg:DI 61 [ <retval> ])) malloc.c:57 -1
     (nil))
(insn 38 35 0 9 (use (reg/i:DI 0 ax)) malloc.c:57 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function powertwo (powertwo, funcdef_no=3, decl_uid=3122, cgraph_uid=3)

powertwo (size_t size)
{
  size_t j;
  size_t i;
  size_t D.3198;
  size_t _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  j_4 = 1;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  j_6 = j_2 << 1;
  i_7 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_3(2), i_7(3)>
  # j_2 = PHI <j_4(2), j_6(3)>
  if (j_2 < size_5(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _8 = i_1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _8;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (j_4 - 4 )
Partition 5 (size_5(D) - 5 )
Partition 6 (j_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (j_4 - 4 )
Partition 4 (size_5(D) - 5 )
Partition 5 (j_6 - 6 )
Partition 6 (i_7 - 7 )


Live on entry to BB2 : size_5(D)  

Live on entry to BB3 : i_1  j_2  size_5(D)  

Live on entry to BB4 : size_5(D)  

Live on entry to BB5 : i_1  

Live on entry to BB6 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_3
(2147483646) i_1 <-> i_7
(2147483646) j_2 <-> j_4
(2147483646) j_2 <-> j_6

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (j_4 - 4 )
Partition 4 (size_5(D) - 5 )
Partition 5 (j_6 - 6 )
Partition 6 (i_7 - 7 )

Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (7)i_7 [map: 0, 6] : Success -> 0
Coalesce list: (2)j_2 & (4)j_4 [map: 1, 3] : Success -> 1
Coalesce list: (2)j_2 & (6)j_6 [map: 1, 5] : Success -> 1
Coalesce list: (2)j_2 & (6)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (4)j_2: Already Coalesced.
Coalesce list: (1)i_1 & (7)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 7 )
Partition 1 (j_2 - 2 4 6 )
Partition 2 (size_5(D) - 5 )
Partition 3 (_8 - 8 )

powertwo (size_t size)
{
  size_t j;
  size_t i;
  size_t D.3198;
  size_t _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  j_4 = 1;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  j_6 = j_2 << 1;
  i_7 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_3(2), i_7(3)>
  # j_2 = PHI <j_4(2), j_6(3)>
  if (j_2 < size_5(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _8 = i_1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _8;
;;    succ:       EXIT

}


Partition 1: size 8 align 8
	j_2
Partition 0: size 8 align 8
	i_1

;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 6 5 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
        (const_int 0 [0])) malloc.c:62 -1
     (nil))

;; j_4 = 1;

(insn 7 6 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])
        (const_int 1 [0x1])) malloc.c:63 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_6 = j_2 << 1;

(insn 11 10 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])
                (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:65 -1
     (nil))

;; i_7 = i_1 + 1;

(insn 12 11 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:66 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 13 12 14 11 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_2 < size_5(D))

(insn 16 14 17 (set (reg:DI 61)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])) malloc.c:64 -1
     (nil))

(insn 17 16 18 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 61)
            (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 size+0 S8 A64]))) malloc.c:64 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) malloc.c:64 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _8 = i_1;

(insn 20 19 0 (set (reg:DI 59 [ D.3323 ])
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) malloc.c:68 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 21 20 22 13 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; return _8;

(insn 23 22 24 (set (reg:DI 60 [ <retval> ])
        (reg:DI 59 [ D.3323 ])) malloc.c:68 -1
     (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 0)) malloc.c:68 -1
     (nil))

(barrier 25 24 0)
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 size+0 S8 A64])
        (reg:DI 5 di [ size ])) malloc.c:60 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
        (const_int 0 [0])) malloc.c:62 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])
        (const_int 1 [0x1])) malloc.c:63 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 13)) malloc.c:64 -1
     (nil)
 -> 13)
;;  succ:       5

(barrier 9 8 15)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 15 9 10 4 12 "" [1 uses])
(note 10 15 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])
                (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:65 -1
     (nil))
(insn 12 11 13 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:66 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 13 12 14 5 11 "" [1 uses])
(note 14 13 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 14 17 5 (set (reg:DI 61)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S8 A64])) malloc.c:64 -1
     (nil))
(insn 17 16 18 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 61)
            (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 size+0 S8 A64]))) malloc.c:64 -1
     (nil))
(jump_insn 18 17 19 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) malloc.c:64 -1
     (nil)
 -> 15)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 23 6 (set (reg:DI 59 [ D.3323 ])
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) malloc.c:68 -1
     (nil))
(insn 23 20 27 6 (set (reg:DI 60 [ <retval> ])
        (reg:DI 59 [ D.3323 ])) malloc.c:68 -1
     (nil))
(insn 27 23 30 6 (set (reg/i:DI 0 ax)
        (reg:DI 60 [ <retval> ])) malloc.c:69 -1
     (nil))
(insn 30 27 0 6 (use (reg/i:DI 0 ax)) malloc.c:69 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function malloc (<unset-asm-name>, funcdef_no=4, decl_uid=975, cgraph_uid=4)

malloc (size_t size)
{
  size_t I;
  size_t J;
  size_t K;
  struct s_block * b;
  char * base_addr.8;
  char * base_addr.7;
  void * base_addr.6;
  struct s_block * D.3208;
  void * D.3207;
  long unsigned int D.3204;
  char * base_addr.5;
  char * base_addr.4;
  void * _2;
  long unsigned int _6;
  void * _9;
  struct s_block * _13;
  void * _14;
  void * _18;
  void * _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  base_addr.4_3 = base_addr;
  printf ("david base address is %p\n", base_addr.4_3);
  base_addr.5_4 = base_addr;
  if (base_addr.5_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = size_5(D) + 24;
  K_7 = powertwo (_6);
  J_8 = find_block (K_7);
  if (J_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = 0B;
  goto <bb 12> (<L9>);
;;    succ:       12

;;   basic block 5, loop depth 0
;;    pred:       3
  I_10 = J_8;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  split_block (I_1);
  I_11 = I_1 + 18446744073709551615;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # I_1 = PHI <I_10(5), I_11(6)>
  if (I_1 > K_7)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  b_12 = free_list[K_7];
  b_12->reserved = 1;
  _13 = b_12->succ;
  free_list[K_7] = _13;
  _14 = b_12 + 24;
  goto <bb 12> (<L9>);
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       2
  __builtin_puts (&"malloc first time "[0]);
  base_addr.6_15 = sbrk (16777216);
  base_addr = base_addr.6_15;
  base_addr.7_16 = base_addr;
  printf ("base address is %p\n", base_addr.7_16);
  printf ("size is %zu \n", 16777216);
  base_addr.8_17 = base_addr;
  if (base_addr.8_17 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  _18 = 0B;
  goto <bb 12> (<L9>);
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  b_19 = base_addr;
  b_19->kval = 24;
  b_19->succ = 0B;
  b_19->pred = 0B;
  b_19->reserved = 0;
  free_list[24] = b_19;
  _20 = malloc (size_5(D));
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       4
;;                8
;;                10
;;                11
  # _2 = PHI <_9(4), _14(8), _18(10), _20(11)>
<L9>:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (I_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (base_addr.4_3 - 3 )
Partition 4 (base_addr.5_4 - 4 )
Partition 5 (size_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (K_7 - 7 )
Partition 8 (J_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (I_10 - 10 )
Partition 11 (I_11 - 11 )
Partition 12 (b_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (base_addr.6_15 - 15 )
Partition 16 (base_addr.7_16 - 16 )
Partition 17 (base_addr.8_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (b_19 - 19 )
Partition 20 (_20 - 20 )


Partition map 

Partition 0 (I_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (size_5(D) - 5 )
Partition 3 (_9 - 9 )
Partition 4 (I_10 - 10 )
Partition 5 (I_11 - 11 )
Partition 6 (b_12 - 12 )
Partition 7 (_14 - 14 )
Partition 8 (_18 - 18 )
Partition 9 (b_19 - 19 )
Partition 10 (_20 - 20 )


Live on entry to BB2 : size_5(D)  

Live on entry to BB3 : size_5(D)  

Live on entry to BB4 : 

Live on entry to BB5 : 

Live on entry to BB6 : I_1  

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : size_5(D)  

Live on entry to BB10 : 

Live on entry to BB11 : size_5(D)  

Live on entry to BB12 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) I_1 <-> I_10
(2147483646) I_1 <-> I_11
(2147483646) b_12 <-> b_19

Partition map 

Partition 0 (I_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (size_5(D) - 5 )
Partition 3 (_9 - 9 )
Partition 4 (I_10 - 10 )
Partition 5 (I_11 - 11 )
Partition 6 (b_12 - 12 )
Partition 7 (_14 - 14 )
Partition 8 (_18 - 18 )
Partition 9 (b_19 - 19 )
Partition 10 (_20 - 20 )

Coalesce list: (1)I_1 & (10)I_10 [map: 0, 4] : Success -> 0
Coalesce list: (1)I_1 & (11)I_11 [map: 0, 5] : Success -> 0
Coalesce list: (12)b_12 & (19)b_19 [map: 6, 9] : Success -> 6
Coalesce list: (2)_2 & (20)_20 [map: 1, 10] : Success -> 1
Coalesce list: (2)_2 & (18)_18 [map: 1, 8] : Success -> 1
Coalesce list: (2)_2 & (14)_14 [map: 1, 7] : Success -> 1
Coalesce list: (2)_2 & (9)_9 [map: 1, 3] : Success -> 1
Coalesce list: (1)I_1 & (11)I_1: Already Coalesced.
Coalesce list: (1)I_1 & (10)I_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (I_1 - 1 10 11 )
Partition 1 (_2 - 2 9 14 18 20 )
Partition 2 (base_addr.4_3 - 3 )
Partition 3 (base_addr.5_4 - 4 )
Partition 4 (size_5(D) - 5 )
Partition 5 (_6 - 6 )
Partition 6 (K_7 - 7 )
Partition 7 (J_8 - 8 )
Partition 8 (b_12 - 12 19 )
Partition 9 (_13 - 13 )
Partition 10 (base_addr.6_15 - 15 )
Partition 11 (base_addr.7_16 - 16 )
Partition 12 (base_addr.8_17 - 17 )

malloc (size_t size)
{
  size_t I;
  size_t J;
  size_t K;
  struct s_block * b;
  char * base_addr.8;
  char * base_addr.7;
  void * base_addr.6;
  struct s_block * D.3208;
  void * D.3207;
  long unsigned int D.3204;
  char * base_addr.5;
  char * base_addr.4;
  void * _2;
  long unsigned int _6;
  void * _9;
  struct s_block * _13;
  void * _14;
  void * _18;
  void * _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  base_addr.4_3 = base_addr;
  printf ("david base address is %p\n", base_addr.4_3);
  base_addr.5_4 = base_addr;
  if (base_addr.5_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = size_5(D) + 24;
  K_7 = powertwo (_6);
  J_8 = find_block (K_7);
  if (J_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = 0B;
  goto <bb 12> (<L9>);
;;    succ:       12

;;   basic block 5, loop depth 0
;;    pred:       3
  I_10 = J_8;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       7
  split_block (I_1);
  I_11 = I_1 + 18446744073709551615;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # I_1 = PHI <I_10(5), I_11(6)>
  if (I_1 > K_7)
    goto <bb 6>;
  else
    goto <bb 8>;
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  b_12 = free_list[K_7];
  b_12->reserved = 1;
  _13 = b_12->succ;
  free_list[K_7] = _13;
  _14 = b_12 + 24;
  goto <bb 12> (<L9>);
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       2
  __builtin_puts (&"malloc first time "[0]);
  base_addr.6_15 = sbrk (16777216);
  base_addr = base_addr.6_15;
  base_addr.7_16 = base_addr;
  printf ("base address is %p\n", base_addr.7_16);
  printf ("size is %zu \n", 16777216);
  base_addr.8_17 = base_addr;
  if (base_addr.8_17 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  _18 = 0B;
  goto <bb 12> (<L9>);
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  b_19 = base_addr;
  b_19->kval = 24;
  b_19->succ = 0B;
  b_19->pred = 0B;
  b_19->reserved = 0;
  free_list[24] = b_19;
  _20 = malloc (size_5(D));
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       4
;;                8
;;                10
;;                11
  # _2 = PHI <_9(4), _14(8), _18(10), _20(11)>
<L9>:
  return _2;
;;    succ:       EXIT

}


Partition 3: size 8 align 8
	b_12
Partition 2: size 8 align 8
	J_8
Partition 1: size 8 align 8
	K_7
Partition 0: size 8 align 8
	I_1

;; Generating RTL for gimple basic block 2

;; base_addr.4_3 = base_addr;

(insn 6 5 0 (set (reg/f:DI 60 [ base_addr.4 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:75 -1
     (nil))

;; printf ("david base address is %p\n", base_addr.4_3);

(insn 7 6 8 (set (reg:DI 4 si)
        (reg/f:DI 60 [ base_addr.4 ])) malloc.c:75 -1
     (nil))

(insn 8 7 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4483222720 *.LC0>)) malloc.c:75 -1
     (nil))

(insn 9 8 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) malloc.c:75 -1
     (nil))

(call_insn 10 9 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f448341ec00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) malloc.c:75 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))

;; base_addr.5_4 = base_addr;

(insn 11 10 0 (set (reg/f:DI 61 [ base_addr.5 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:77 -1
     (nil))

;; if (base_addr.5_4 != 0B)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ base_addr.5 ])
            (const_int 0 [0]))) malloc.c:77 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:77 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _6 = size_5(D) + 24;

(insn 15 14 16 (set (reg:DI 68)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) malloc.c:78 -1
     (nil))

(insn 16 15 0 (parallel [
            (set (reg:DI 62 [ D.3325 ])
                (plus:DI (reg:DI 68)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:78 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; K_7 = powertwo (_6);

(insn 17 16 18 (set (reg:DI 5 di)
        (reg:DI 62 [ D.3325 ])) malloc.c:78 -1
     (nil))

(call_insn 18 17 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("powertwo") [flags 0x3]  <function_decl 0x7f44831d5800 powertwo>) [0 powertwo S1 A8])
            (const_int 0 [0]))) malloc.c:78 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 19 18 20 (set (reg:DI 69)
        (reg:DI 0 ax)) malloc.c:78 -1
     (nil))

(insn 20 19 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])
        (reg:DI 69)) malloc.c:78 -1
     (nil))

;; J_8 = find_block (K_7);

(insn 21 20 22 (set (reg:DI 70)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])) malloc.c:79 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 70)) malloc.c:79 -1
     (nil))

(call_insn 23 22 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_block") [flags 0x3]  <function_decl 0x7f44831d5700 find_block>) [0 find_block S1 A8])
            (const_int 0 [0]))) malloc.c:79 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 24 23 25 (set (reg:DI 71)
        (reg:DI 0 ax)) malloc.c:79 -1
     (nil))

(insn 25 24 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 J+0 S8 A64])
        (reg:DI 71)) malloc.c:79 -1
     (nil))

;; if (J_8 == 0)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 J+0 S8 A64])
            (const_int 0 [0]))) malloc.c:80 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:80 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _9 = 0B;

(insn 29 28 0 (set (reg/f:DI 59 [ D.3324 ])
        (const_int 0 [0])) malloc.c:80 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 32 31 33 16 "" [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; I_10 = J_8;

(insn 34 33 35 (set (reg:DI 72)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 J+0 S8 A64])) malloc.c:81 -1
     (nil))

(insn 35 34 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])
        (reg:DI 72)) malloc.c:81 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; split_block (I_1);

(insn 39 38 40 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])) malloc.c:82 -1
     (nil))

(insn 40 39 41 (set (reg:DI 5 di)
        (reg:DI 73)) malloc.c:82 -1
     (nil))

(call_insn 41 40 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("split_block") [flags 0x3]  <function_decl 0x7f44831d5600 split_block>) [0 split_block S1 A8])
            (const_int 0 [0]))) malloc.c:82 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; I_11 = I_1 + 18446744073709551615;

(insn 42 41 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:81 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 43 42 44 18 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; if (I_1 > K_7)

(insn 46 44 47 (set (reg:DI 74)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])) malloc.c:81 -1
     (nil))

(insn 47 46 48 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 74)
            (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64]))) malloc.c:81 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) malloc.c:81 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; b_12 = free_list[K_7];

(insn 50 49 51 (set (reg:DI 75)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])) malloc.c:85 -1
     (nil))

(insn 51 50 52 (set (reg/f:DI 76)
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 75)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:85 -1
     (nil))

(insn 52 51 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])
        (reg/f:DI 76)) malloc.c:85 -1
     (nil))

;; b_12->reserved = 1;

(insn 53 52 56 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:87 -1
     (nil))

(insn 56 53 57 (set (reg:QI 80)
        (mem/j:QI (reg/f:DI 77) [0 b_12->reserved+0 S1 A64])) malloc.c:87 -1
     (nil))

(insn 57 56 58 (parallel [
            (set (reg:QI 81)
                (ior:QI (reg:QI 80)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:87 -1
     (nil))

(insn 58 57 0 (set (mem/j:QI (reg/f:DI 77) [0 b_12->reserved+0 S1 A64])
        (reg:QI 81)) malloc.c:87 -1
     (nil))

;; _13 = b_12->succ;

(insn 59 58 60 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:88 -1
     (nil))

(insn 60 59 0 (set (reg/f:DI 63 [ D.3326 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 82)
                (const_int 8 [0x8])) [0 b_12->succ+0 S8 A64])) malloc.c:88 -1
     (nil))

;; free_list[K_7] = _13;

(insn 61 60 62 (set (reg:DI 83)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])) malloc.c:88 -1
     (nil))

(insn 62 61 0 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 83)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 63 [ D.3326 ])) malloc.c:88 -1
     (nil))

;; _14 = b_12 + 24;

(insn 63 62 64 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:89 -1
     (nil))

(insn 64 63 0 (parallel [
            (set (reg/f:DI 59 [ D.3324 ])
                (plus:DI (reg/f:DI 84)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:89 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; Generating RTL for gimple basic block 9

;; 

(code_label 67 66 68 15 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_puts (&"malloc first time "[0]);

(insn 69 68 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f44832227b8 *.LC1>)) malloc.c:92 -1
     (nil))

(call_insn 70 69 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f4483420300 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) malloc.c:92 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; base_addr.6_15 = sbrk (16777216);

(insn 71 70 72 (set (reg:DI 5 di)
        (const_int 16777216 [0x1000000])) malloc.c:94 -1
     (nil))

(call_insn 72 71 73 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sbrk") [flags 0x41]  <function_decl 0x7f4483569a00 sbrk>) [0 sbrk S1 A8])
            (const_int 0 [0]))) malloc.c:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 73 72 0 (set (reg/f:DI 64 [ base_addr.6 ])
        (reg:DI 0 ax)) malloc.c:94 -1
     (nil))

;; base_addr = base_addr.6_15;

(insn 74 73 0 (set (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])
        (reg/f:DI 64 [ base_addr.6 ])) malloc.c:94 -1
     (nil))

;; base_addr.7_16 = base_addr;

(insn 75 74 0 (set (reg/f:DI 65 [ base_addr.7 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:96 -1
     (nil))

;; printf ("base address is %p\n", base_addr.7_16);

(insn 76 75 77 (set (reg:DI 4 si)
        (reg/f:DI 65 [ base_addr.7 ])) malloc.c:96 -1
     (nil))

(insn 77 76 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f4483222850 *.LC2>)) malloc.c:96 -1
     (nil))

(insn 78 77 79 (set (reg:QI 0 ax)
        (const_int 0 [0])) malloc.c:96 -1
     (nil))

(call_insn 79 78 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f448341ec00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) malloc.c:96 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))

;; printf ("size is %zu \n", 16777216);

(insn 80 79 81 (set (reg:SI 4 si)
        (const_int 16777216 [0x1000000])) malloc.c:97 -1
     (nil))

(insn 81 80 82 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f44832228e8 *.LC3>)) malloc.c:97 -1
     (nil))

(insn 82 81 83 (set (reg:QI 0 ax)
        (const_int 0 [0])) malloc.c:97 -1
     (nil))

(call_insn 83 82 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f448341ec00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) malloc.c:97 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))

;; base_addr.8_17 = base_addr;

(insn 84 83 0 (set (reg/f:DI 66 [ base_addr.8 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:99 -1
     (nil))

;; if (base_addr.8_17 == 0B)

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 66 [ base_addr.8 ])
            (const_int 0 [0]))) malloc.c:99 -1
     (nil))

(jump_insn 86 85 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:99 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _18 = 0B;

(insn 88 87 0 (set (reg/f:DI 59 [ D.3324 ])
        (const_int 0 [0])) malloc.c:99 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 91 90 92 20 "" [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; b_19 = base_addr;

(insn 93 92 94 (set (reg/f:DI 85)
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:101 -1
     (nil))

(insn 94 93 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])
        (reg/f:DI 85)) malloc.c:101 -1
     (nil))

;; b_19->kval = 24;

(insn 95 94 96 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:102 -1
     (nil))

(insn 96 95 0 (set (mem/j:QI (plus:DI (reg/f:DI 86)
                (const_int 1 [0x1])) [0 b_19->kval+0 S1 A8])
        (const_int 24 [0x18])) malloc.c:102 -1
     (nil))

;; b_19->succ = 0B;

(insn 97 96 98 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:103 -1
     (nil))

(insn 98 97 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 87)
                (const_int 8 [0x8])) [0 b_19->succ+0 S8 A64])
        (const_int 0 [0])) malloc.c:103 -1
     (nil))

;; b_19->pred = 0B;

(insn 99 98 100 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:104 -1
     (nil))

(insn 100 99 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 88)
                (const_int 16 [0x10])) [0 b_19->pred+0 S8 A64])
        (const_int 0 [0])) malloc.c:104 -1
     (nil))

;; b_19->reserved = 0;

(insn 101 100 104 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:105 -1
     (nil))

(insn 104 101 105 (set (reg:QI 92)
        (mem/j:QI (reg/f:DI 89) [0 b_19->reserved+0 S1 A64])) malloc.c:105 -1
     (nil))

(insn 105 104 106 (parallel [
            (set (reg:QI 93)
                (and:QI (reg:QI 92)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:105 -1
     (nil))

(insn 106 105 0 (set (mem/j:QI (reg/f:DI 89) [0 b_19->reserved+0 S1 A64])
        (reg:QI 93)) malloc.c:105 -1
     (nil))

;; free_list[24] = b_19;

(insn 107 106 108 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:106 -1
     (nil))

(insn 108 107 0 (set (mem/f/j:DI (const:DI (plus:DI (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)
                    (const_int 192 [0xc0]))) [0 free_list+192 S8 A256])
        (reg/f:DI 94)) malloc.c:106 -1
     (nil))

;; _20 = malloc (size_5(D));

(insn 109 108 110 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) malloc.c:107 -1
     (nil))

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 95)) malloc.c:107 -1
     (nil))

(call_insn 111 110 112 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:107 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 112 111 113 (set (reg/f:DI 96)
        (reg:DI 0 ax)) malloc.c:107 -1
     (expr_list:REG_NOALIAS (reg/f:DI 96)
        (nil)))

(insn 113 112 0 (set (reg/f:DI 59 [ D.3324 ])
        (reg/f:DI 96)) malloc.c:107 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; <L9>:

(code_label 114 113 115 17 "" [0 uses])

(note 115 114 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 116 115 117 (set (reg:DI 67 [ <retval> ])
        (reg/f:DI 59 [ D.3324 ])) -1
     (nil))

(jump_insn 117 116 118 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 118 117 0)
deleting block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 5 di [ size ])) malloc.c:72 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 60 [ base_addr.4 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:75 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (reg/f:DI 60 [ base_addr.4 ])) malloc.c:75 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4483222720 *.LC0>)) malloc.c:75 -1
     (nil))
(insn 9 8 10 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) malloc.c:75 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f448341ec00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) malloc.c:75 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 11 10 12 2 (set (reg/f:DI 61 [ base_addr.5 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:77 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ base_addr.5 ])
            (const_int 0 [0]))) malloc.c:77 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) malloc.c:77 -1
     (nil)
 -> 67)
;;  succ:       4 (FALLTHRU)
;;              10

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 68)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) malloc.c:78 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 62 [ D.3325 ])
                (plus:DI (reg:DI 68)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:78 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg:DI 62 [ D.3325 ])) malloc.c:78 -1
     (nil))
(call_insn 18 17 19 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("powertwo") [flags 0x3]  <function_decl 0x7f44831d5800 powertwo>) [0 powertwo S1 A8])
            (const_int 0 [0]))) malloc.c:78 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 4 (set (reg:DI 69)
        (reg:DI 0 ax)) malloc.c:78 -1
     (nil))
(insn 20 19 21 4 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])
        (reg:DI 69)) malloc.c:78 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 70)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])) malloc.c:79 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 70)) malloc.c:79 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_block") [flags 0x3]  <function_decl 0x7f44831d5700 find_block>) [0 find_block S1 A8])
            (const_int 0 [0]))) malloc.c:79 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 4 (set (reg:DI 71)
        (reg:DI 0 ax)) malloc.c:79 -1
     (nil))
(insn 25 24 26 4 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 J+0 S8 A64])
        (reg:DI 71)) malloc.c:79 -1
     (nil))
(insn 26 25 27 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 J+0 S8 A64])
            (const_int 0 [0]))) malloc.c:80 -1
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) malloc.c:80 -1
     (nil)
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:DI 59 [ D.3324 ])
        (const_int 0 [0])) malloc.c:80 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (label_ref 114)) malloc.c:80 -1
     (nil)
 -> 114)
;;  succ:       13

(barrier 31 30 32)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 32 31 33 6 16 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:DI 72)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 J+0 S8 A64])) malloc.c:81 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])
        (reg:DI 72)) malloc.c:81 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (label_ref 43)) malloc.c:81 -1
     (nil)
 -> 43)
;;  succ:       8

(barrier 37 36 45)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 45 37 38 7 19 "" [1 uses])
(note 38 45 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])) malloc.c:82 -1
     (nil))
(insn 40 39 41 7 (set (reg:DI 5 di)
        (reg:DI 73)) malloc.c:82 -1
     (nil))
(call_insn 41 40 42 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("split_block") [flags 0x3]  <function_decl 0x7f44831d5600 split_block>) [0 split_block S1 A8])
            (const_int 0 [0]))) malloc.c:82 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 7 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:81 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 43 42 44 8 18 "" [1 uses])
(note 44 43 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 47 8 (set (reg:DI 74)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 I+0 S8 A64])) malloc.c:81 -1
     (nil))
(insn 47 46 48 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 74)
            (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64]))) malloc.c:81 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) malloc.c:81 -1
     (nil)
 -> 45)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 9 (set (reg:DI 75)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])) malloc.c:85 -1
     (nil))
(insn 51 50 52 9 (set (reg/f:DI 76)
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 75)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:85 -1
     (nil))
(insn 52 51 53 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])
        (reg/f:DI 76)) malloc.c:85 -1
     (nil))
(insn 53 52 56 9 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:87 -1
     (nil))
(insn 56 53 57 9 (set (reg:QI 80)
        (mem/j:QI (reg/f:DI 77) [0 b_12->reserved+0 S1 A64])) malloc.c:87 -1
     (nil))
(insn 57 56 58 9 (parallel [
            (set (reg:QI 81)
                (ior:QI (reg:QI 80)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:87 -1
     (nil))
(insn 58 57 59 9 (set (mem/j:QI (reg/f:DI 77) [0 b_12->reserved+0 S1 A64])
        (reg:QI 81)) malloc.c:87 -1
     (nil))
(insn 59 58 60 9 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:88 -1
     (nil))
(insn 60 59 61 9 (set (reg/f:DI 63 [ D.3326 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 82)
                (const_int 8 [0x8])) [0 b_12->succ+0 S8 A64])) malloc.c:88 -1
     (nil))
(insn 61 60 62 9 (set (reg:DI 83)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 K+0 S8 A64])) malloc.c:88 -1
     (nil))
(insn 62 61 63 9 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 83)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 63 [ D.3326 ])) malloc.c:88 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:89 -1
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg/f:DI 59 [ D.3324 ])
                (plus:DI (reg/f:DI 84)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:89 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(jump_insn 65 64 66 9 (set (pc)
        (label_ref 114)) malloc.c:89 -1
     (nil)
 -> 114)
;;  succ:       13

(barrier 66 65 67)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 67 66 68 10 15 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f44832227b8 *.LC1>)) malloc.c:92 -1
     (nil))
(call_insn 70 69 71 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f4483420300 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) malloc.c:92 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 71 70 72 10 (set (reg:DI 5 di)
        (const_int 16777216 [0x1000000])) malloc.c:94 -1
     (nil))
(call_insn 72 71 73 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sbrk") [flags 0x41]  <function_decl 0x7f4483569a00 sbrk>) [0 sbrk S1 A8])
            (const_int 0 [0]))) malloc.c:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 73 72 74 10 (set (reg/f:DI 64 [ base_addr.6 ])
        (reg:DI 0 ax)) malloc.c:94 -1
     (nil))
(insn 74 73 75 10 (set (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])
        (reg/f:DI 64 [ base_addr.6 ])) malloc.c:94 -1
     (nil))
(insn 75 74 76 10 (set (reg/f:DI 65 [ base_addr.7 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:96 -1
     (nil))
(insn 76 75 77 10 (set (reg:DI 4 si)
        (reg/f:DI 65 [ base_addr.7 ])) malloc.c:96 -1
     (nil))
(insn 77 76 78 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f4483222850 *.LC2>)) malloc.c:96 -1
     (nil))
(insn 78 77 79 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) malloc.c:96 -1
     (nil))
(call_insn 79 78 80 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f448341ec00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) malloc.c:96 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 80 79 81 10 (set (reg:SI 4 si)
        (const_int 16777216 [0x1000000])) malloc.c:97 -1
     (nil))
(insn 81 80 82 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f44832228e8 *.LC3>)) malloc.c:97 -1
     (nil))
(insn 82 81 83 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) malloc.c:97 -1
     (nil))
(call_insn 83 82 84 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f448341ec00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) malloc.c:97 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 84 83 85 10 (set (reg/f:DI 66 [ base_addr.8 ])
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:99 -1
     (nil))
(insn 85 84 86 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 66 [ base_addr.8 ])
            (const_int 0 [0]))) malloc.c:99 -1
     (nil))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) malloc.c:99 -1
     (nil)
 -> 91)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (reg/f:DI 59 [ D.3324 ])
        (const_int 0 [0])) malloc.c:99 -1
     (nil))
(jump_insn 89 88 90 11 (set (pc)
        (label_ref 114)) malloc.c:99 -1
     (nil)
 -> 114)
;;  succ:       13

(barrier 90 89 91)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 91 90 92 12 20 "" [1 uses])
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg/f:DI 85)
        (mem/f/c:DI (symbol_ref:DI ("base_addr") [flags 0x2]  <var_decl 0x7f448319eb48 base_addr>) [0 base_addr+0 S8 A64])) malloc.c:101 -1
     (nil))
(insn 94 93 95 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])
        (reg/f:DI 85)) malloc.c:101 -1
     (nil))
(insn 95 94 96 12 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:102 -1
     (nil))
(insn 96 95 97 12 (set (mem/j:QI (plus:DI (reg/f:DI 86)
                (const_int 1 [0x1])) [0 b_19->kval+0 S1 A8])
        (const_int 24 [0x18])) malloc.c:102 -1
     (nil))
(insn 97 96 98 12 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:103 -1
     (nil))
(insn 98 97 99 12 (set (mem/f/j:DI (plus:DI (reg/f:DI 87)
                (const_int 8 [0x8])) [0 b_19->succ+0 S8 A64])
        (const_int 0 [0])) malloc.c:103 -1
     (nil))
(insn 99 98 100 12 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:104 -1
     (nil))
(insn 100 99 101 12 (set (mem/f/j:DI (plus:DI (reg/f:DI 88)
                (const_int 16 [0x10])) [0 b_19->pred+0 S8 A64])
        (const_int 0 [0])) malloc.c:104 -1
     (nil))
(insn 101 100 104 12 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:105 -1
     (nil))
(insn 104 101 105 12 (set (reg:QI 92)
        (mem/j:QI (reg/f:DI 89) [0 b_19->reserved+0 S1 A64])) malloc.c:105 -1
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg:QI 93)
                (and:QI (reg:QI 92)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:105 -1
     (nil))
(insn 106 105 107 12 (set (mem/j:QI (reg/f:DI 89) [0 b_19->reserved+0 S1 A64])
        (reg:QI 93)) malloc.c:105 -1
     (nil))
(insn 107 106 108 12 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 b+0 S8 A64])) malloc.c:106 -1
     (nil))
(insn 108 107 109 12 (set (mem/f/j:DI (const:DI (plus:DI (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)
                    (const_int 192 [0xc0]))) [0 free_list+192 S8 A256])
        (reg/f:DI 94)) malloc.c:106 -1
     (nil))
(insn 109 108 110 12 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) malloc.c:107 -1
     (nil))
(insn 110 109 111 12 (set (reg:DI 5 di)
        (reg:DI 95)) malloc.c:107 -1
     (nil))
(call_insn 111 110 112 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:107 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 12 (set (reg/f:DI 96)
        (reg:DI 0 ax)) malloc.c:107 -1
     (expr_list:REG_NOALIAS (reg/f:DI 96)
        (nil)))
(insn 113 112 114 12 (set (reg/f:DI 59 [ D.3324 ])
        (reg/f:DI 96)) malloc.c:107 -1
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              9
;;              11
;;              12 (FALLTHRU)
(code_label 114 113 115 13 17 "" [3 uses])
(note 115 114 116 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 120 13 (set (reg:DI 67 [ <retval> ])
        (reg/f:DI 59 [ D.3324 ])) -1
     (nil))
(insn 120 116 123 13 (set (reg/i:DI 0 ax)
        (reg:DI 67 [ <retval> ])) malloc.c:109 -1
     (nil))
(insn 123 120 0 13 (use (reg/i:DI 0 ax)) malloc.c:109 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function push_block (push_block, funcdef_no=5, decl_uid=3140, cgraph_uid=5)

push_block (struct s_block * current)
{
  int D.3231;
  unsigned char D.3230;
  struct s_block * D.3229;
  int D.3228;
  unsigned char D.3227;
  struct s_block * D.3226;
  struct s_block * D.3225;
  int D.3224;
  unsigned char D.3223;
  struct s_block * D.3222;
  int D.3221;
  unsigned char D.3220;
  struct s_block * D.3217;
  int D.3216;
  unsigned char D.3215;
  unsigned char _2;
  int _3;
  struct s_block * _4;
  unsigned char _5;
  int _6;
  struct s_block * _7;
  unsigned char _8;
  int _9;
  struct s_block * _10;
  struct s_block * _11;
  unsigned char _12;
  int _13;
  struct s_block * _14;
  unsigned char _15;
  int _16;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = current_1(D)->kval;
  _3 = (int) _2;
  _4 = free_list[_3];
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = current_1(D)->kval;
  _6 = (int) _5;
  _7 = free_list[_6];
  current_1(D)->succ = _7;
  _8 = current_1(D)->kval;
  _9 = (int) _8;
  _10 = free_list[_9];
  _11 = _10->pred;
  current_1(D)->pred = _11;
  _12 = current_1(D)->kval;
  _13 = (int) _12;
  _14 = free_list[_13];
  _14->pred = current_1(D);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _15 = current_1(D)->kval;
  _16 = (int) _15;
  free_list[_16] = current_1(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (current_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )


Partition map 

Partition 0 (current_1(D) - 1 )


Live on entry to BB2 : current_1(D)  

Live on entry to BB3 : current_1(D)  

Live on entry to BB4 : current_1(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (current_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (current_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )

push_block (struct s_block * current)
{
  int D.3231;
  unsigned char D.3230;
  struct s_block * D.3229;
  int D.3228;
  unsigned char D.3227;
  struct s_block * D.3226;
  struct s_block * D.3225;
  int D.3224;
  unsigned char D.3223;
  struct s_block * D.3222;
  int D.3221;
  unsigned char D.3220;
  struct s_block * D.3217;
  int D.3216;
  unsigned char D.3215;
  unsigned char _2;
  int _3;
  struct s_block * _4;
  unsigned char _5;
  int _6;
  struct s_block * _7;
  unsigned char _8;
  int _9;
  struct s_block * _10;
  struct s_block * _11;
  unsigned char _12;
  int _13;
  struct s_block * _14;
  unsigned char _15;
  int _16;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = current_1(D)->kval;
  _3 = (int) _2;
  _4 = free_list[_3];
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = current_1(D)->kval;
  _6 = (int) _5;
  _7 = free_list[_6];
  current_1(D)->succ = _7;
  _8 = current_1(D)->kval;
  _9 = (int) _8;
  _10 = free_list[_9];
  _11 = _10->pred;
  current_1(D)->pred = _11;
  _12 = current_1(D)->kval;
  _13 = (int) _12;
  _14 = free_list[_13];
  _14->pred = current_1(D);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _15 = current_1(D)->kval;
  _16 = (int) _15;
  free_list[_16] = current_1(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = current_1(D)->kval;

(insn 6 5 7 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:112 -1
     (nil))

(insn 7 6 0 (set (reg:QI 59 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 74)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:112 -1
     (nil))

;; _3 = (int) _2;

(insn 8 7 0 (set (reg:SI 60 [ D.3332 ])
        (zero_extend:SI (reg:QI 59 [ D.3331 ]))) malloc.c:112 -1
     (nil))

;; _4 = free_list[_3];

(insn 9 8 10 (set (reg:DI 75)
        (sign_extend:DI (reg:SI 60 [ D.3332 ]))) malloc.c:112 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 61 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 75)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:112 -1
     (nil))

;; if (_4 != 0B)

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3333 ])
            (const_int 0 [0]))) malloc.c:112 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:112 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = current_1(D)->kval;

(insn 14 13 15 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:113 -1
     (nil))

(insn 15 14 0 (set (reg:QI 62 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 76)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:113 -1
     (nil))

;; _6 = (int) _5;

(insn 16 15 0 (set (reg:SI 63 [ D.3332 ])
        (zero_extend:SI (reg:QI 62 [ D.3331 ]))) malloc.c:113 -1
     (nil))

;; _7 = free_list[_6];

(insn 17 16 18 (set (reg:DI 77)
        (sign_extend:DI (reg:SI 63 [ D.3332 ]))) malloc.c:113 -1
     (nil))

(insn 18 17 0 (set (reg/f:DI 64 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 77)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:113 -1
     (nil))

;; current_1(D)->succ = _7;

(insn 19 18 20 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:113 -1
     (nil))

(insn 20 19 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])
        (reg/f:DI 64 [ D.3333 ])) malloc.c:113 -1
     (nil))

;; _8 = current_1(D)->kval;

(insn 21 20 22 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:114 -1
     (nil))

(insn 22 21 0 (set (reg:QI 65 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 79)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:114 -1
     (nil))

;; _9 = (int) _8;

(insn 23 22 0 (set (reg:SI 66 [ D.3332 ])
        (zero_extend:SI (reg:QI 65 [ D.3331 ]))) malloc.c:114 -1
     (nil))

;; _10 = free_list[_9];

(insn 24 23 25 (set (reg:DI 80)
        (sign_extend:DI (reg:SI 66 [ D.3332 ]))) malloc.c:114 -1
     (nil))

(insn 25 24 0 (set (reg/f:DI 67 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 80)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:114 -1
     (nil))

;; _11 = _10->pred;

(insn 26 25 0 (set (reg/f:DI 68 [ D.3333 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 67 [ D.3333 ])
                (const_int 16 [0x10])) [0 _10->pred+0 S8 A64])) malloc.c:114 -1
     (nil))

;; current_1(D)->pred = _11;

(insn 27 26 28 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:114 -1
     (nil))

(insn 28 27 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 81)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])
        (reg/f:DI 68 [ D.3333 ])) malloc.c:114 -1
     (nil))

;; _12 = current_1(D)->kval;

(insn 29 28 30 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:115 -1
     (nil))

(insn 30 29 0 (set (reg:QI 69 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 82)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:115 -1
     (nil))

;; _13 = (int) _12;

(insn 31 30 0 (set (reg:SI 70 [ D.3332 ])
        (zero_extend:SI (reg:QI 69 [ D.3331 ]))) malloc.c:115 -1
     (nil))

;; _14 = free_list[_13];

(insn 32 31 33 (set (reg:DI 83)
        (sign_extend:DI (reg:SI 70 [ D.3332 ]))) malloc.c:115 -1
     (nil))

(insn 33 32 0 (set (reg/f:DI 71 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 83)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:115 -1
     (nil))

;; _14->pred = current_1(D);

(insn 34 33 35 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:115 -1
     (nil))

(insn 35 34 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 71 [ D.3333 ])
                (const_int 16 [0x10])) [0 _14->pred+0 S8 A64])
        (reg/f:DI 84)) malloc.c:115 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 36 35 37 22 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = current_1(D)->kval;

(insn 38 37 39 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:117 -1
     (nil))

(insn 39 38 0 (set (reg:QI 72 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 85)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:117 -1
     (nil))

;; _16 = (int) _15;

(insn 40 39 0 (set (reg:SI 73 [ D.3332 ])
        (zero_extend:SI (reg:QI 72 [ D.3331 ]))) malloc.c:117 -1
     (nil))

;; free_list[_16] = current_1(D);

(insn 41 40 42 (set (reg:DI 86)
        (sign_extend:DI (reg:SI 73 [ D.3332 ]))) malloc.c:117 -1
     (nil))

(insn 42 41 43 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:117 -1
     (nil))

(insn 43 42 0 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 86)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 87)) malloc.c:117 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])
        (reg:DI 5 di [ current ])) malloc.c:111 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:112 -1
     (nil))
(insn 7 6 8 2 (set (reg:QI 59 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 74)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:112 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 60 [ D.3332 ])
        (zero_extend:SI (reg:QI 59 [ D.3331 ]))) malloc.c:112 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 75)
        (sign_extend:DI (reg:SI 60 [ D.3332 ]))) malloc.c:112 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 61 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 75)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:112 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3333 ])
            (const_int 0 [0]))) malloc.c:112 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) malloc.c:112 -1
     (nil)
 -> 36)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:113 -1
     (nil))
(insn 15 14 16 4 (set (reg:QI 62 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 76)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:113 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 63 [ D.3332 ])
        (zero_extend:SI (reg:QI 62 [ D.3331 ]))) malloc.c:113 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 77)
        (sign_extend:DI (reg:SI 63 [ D.3332 ]))) malloc.c:113 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 64 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 77)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:113 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:113 -1
     (nil))
(insn 20 19 21 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])
        (reg/f:DI 64 [ D.3333 ])) malloc.c:113 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:114 -1
     (nil))
(insn 22 21 23 4 (set (reg:QI 65 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 79)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:114 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 66 [ D.3332 ])
        (zero_extend:SI (reg:QI 65 [ D.3331 ]))) malloc.c:114 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 80)
        (sign_extend:DI (reg:SI 66 [ D.3332 ]))) malloc.c:114 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 67 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 80)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:114 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 68 [ D.3333 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 67 [ D.3333 ])
                (const_int 16 [0x10])) [0 _10->pred+0 S8 A64])) malloc.c:114 -1
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:114 -1
     (nil))
(insn 28 27 29 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 81)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])
        (reg/f:DI 68 [ D.3333 ])) malloc.c:114 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:115 -1
     (nil))
(insn 30 29 31 4 (set (reg:QI 69 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 82)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:115 -1
     (nil))
(insn 31 30 32 4 (set (reg:SI 70 [ D.3332 ])
        (zero_extend:SI (reg:QI 69 [ D.3331 ]))) malloc.c:115 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 83)
        (sign_extend:DI (reg:SI 70 [ D.3332 ]))) malloc.c:115 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 71 [ D.3333 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 83)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:115 -1
     (nil))
(insn 34 33 35 4 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:115 -1
     (nil))
(insn 35 34 36 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 71 [ D.3333 ])
                (const_int 16 [0x10])) [0 _14->pred+0 S8 A64])
        (reg/f:DI 84)) malloc.c:115 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 36 35 37 5 22 "" [1 uses])
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:117 -1
     (nil))
(insn 39 38 40 5 (set (reg:QI 72 [ D.3331 ])
        (mem/j:QI (plus:DI (reg/f:DI 85)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:117 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 73 [ D.3332 ])
        (zero_extend:SI (reg:QI 72 [ D.3331 ]))) malloc.c:117 -1
     (nil))
(insn 41 40 42 5 (set (reg:DI 86)
        (sign_extend:DI (reg:SI 73 [ D.3332 ]))) malloc.c:117 -1
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:117 -1
     (nil))
(insn 43 42 0 5 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 86)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 87)) malloc.c:117 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function free_link (free_link, funcdef_no=6, decl_uid=3143, cgraph_uid=6)

free_link (struct s_block * current)
{
  struct s_block * D.3249;
  struct s_block * D.3248;
  struct s_block * D.3245;
  struct s_block * D.3244;
  struct s_block * D.3243;
  struct s_block * D.3240;
  struct s_block * D.3239;
  int D.3238;
  unsigned char D.3237;
  struct s_block * D.3234;
  int D.3233;
  unsigned char D.3232;
  unsigned char _2;
  int _3;
  struct s_block * _4;
  unsigned char _5;
  int _6;
  struct s_block * _7;
  struct s_block * _8;
  struct s_block * _9;
  struct s_block * _10;
  struct s_block * _11;
  struct s_block * _12;
  struct s_block * _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = current_1(D)->kval;
  _3 = (int) _2;
  _4 = free_list[_3];
  if (_4 == current_1(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = current_1(D)->kval;
  _6 = (int) _5;
  _7 = current_1(D)->succ;
  free_list[_6] = _7;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _8 = current_1(D)->succ;
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _9 = current_1(D)->succ;
  _10 = current_1(D)->pred;
  _9->pred = _10;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  _11 = current_1(D)->pred;
  if (_11 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _12 = current_1(D)->pred;
  _13 = current_1(D)->succ;
  _12->succ = _13;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (current_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )


Partition map 

Partition 0 (current_1(D) - 1 )


Live on entry to BB2 : current_1(D)  

Live on entry to BB3 : current_1(D)  

Live on entry to BB4 : current_1(D)  

Live on entry to BB5 : current_1(D)  

Live on entry to BB6 : current_1(D)  

Live on entry to BB7 : current_1(D)  

Live on entry to BB8 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (current_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (current_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )

free_link (struct s_block * current)
{
  struct s_block * D.3249;
  struct s_block * D.3248;
  struct s_block * D.3245;
  struct s_block * D.3244;
  struct s_block * D.3243;
  struct s_block * D.3240;
  struct s_block * D.3239;
  int D.3238;
  unsigned char D.3237;
  struct s_block * D.3234;
  int D.3233;
  unsigned char D.3232;
  unsigned char _2;
  int _3;
  struct s_block * _4;
  unsigned char _5;
  int _6;
  struct s_block * _7;
  struct s_block * _8;
  struct s_block * _9;
  struct s_block * _10;
  struct s_block * _11;
  struct s_block * _12;
  struct s_block * _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = current_1(D)->kval;
  _3 = (int) _2;
  _4 = free_list[_3];
  if (_4 == current_1(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = current_1(D)->kval;
  _6 = (int) _5;
  _7 = current_1(D)->succ;
  free_list[_6] = _7;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  _8 = current_1(D)->succ;
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _9 = current_1(D)->succ;
  _10 = current_1(D)->pred;
  _9->pred = _10;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  _11 = current_1(D)->pred;
  if (_11 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _12 = current_1(D)->pred;
  _13 = current_1(D)->succ;
  _12->succ = _13;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = current_1(D)->kval;

(insn 6 5 7 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:122 -1
     (nil))

(insn 7 6 0 (set (reg:QI 59 [ D.3334 ])
        (mem/j:QI (plus:DI (reg/f:DI 71)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:122 -1
     (nil))

;; _3 = (int) _2;

(insn 8 7 0 (set (reg:SI 60 [ D.3335 ])
        (zero_extend:SI (reg:QI 59 [ D.3334 ]))) malloc.c:122 -1
     (nil))

;; _4 = free_list[_3];

(insn 9 8 10 (set (reg:DI 72)
        (sign_extend:DI (reg:SI 60 [ D.3335 ]))) malloc.c:122 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 61 [ D.3336 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 72)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:122 -1
     (nil))

;; if (_4 == current_1(D))

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3336 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64]))) malloc.c:122 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:122 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = current_1(D)->kval;

(insn 14 13 15 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:123 -1
     (nil))

(insn 15 14 0 (set (reg:QI 62 [ D.3334 ])
        (mem/j:QI (plus:DI (reg/f:DI 73)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:123 -1
     (nil))

;; _6 = (int) _5;

(insn 16 15 0 (set (reg:SI 63 [ D.3335 ])
        (zero_extend:SI (reg:QI 62 [ D.3334 ]))) malloc.c:123 -1
     (nil))

;; _7 = current_1(D)->succ;

(insn 17 16 18 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:123 -1
     (nil))

(insn 18 17 0 (set (reg/f:DI 64 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 74)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:123 -1
     (nil))

;; free_list[_6] = _7;

(insn 19 18 20 (set (reg:DI 75)
        (sign_extend:DI (reg:SI 63 [ D.3335 ]))) malloc.c:123 -1
     (nil))

(insn 20 19 0 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 75)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 64 [ D.3336 ])) malloc.c:123 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 21 20 22 24 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = current_1(D)->succ;

(insn 23 22 24 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:125 -1
     (nil))

(insn 24 23 0 (set (reg/f:DI 65 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 76)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:125 -1
     (nil))

;; if (_8 != 0B)

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 65 [ D.3336 ])
            (const_int 0 [0]))) malloc.c:125 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:125 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _9 = current_1(D)->succ;

(insn 28 27 29 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:126 -1
     (nil))

(insn 29 28 0 (set (reg/f:DI 66 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:126 -1
     (nil))

;; _10 = current_1(D)->pred;

(insn 30 29 31 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:126 -1
     (nil))

(insn 31 30 0 (set (reg/f:DI 67 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])) malloc.c:126 -1
     (nil))

;; _9->pred = _10;

(insn 32 31 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.3336 ])
                (const_int 16 [0x10])) [0 _9->pred+0 S8 A64])
        (reg/f:DI 67 [ D.3336 ])) malloc.c:126 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 33 32 34 25 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = current_1(D)->pred;

(insn 35 34 36 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:128 -1
     (nil))

(insn 36 35 0 (set (reg/f:DI 68 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 79)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])) malloc.c:128 -1
     (nil))

;; if (_11 != 0B)

(insn 37 36 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 68 [ D.3336 ])
            (const_int 0 [0]))) malloc.c:128 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:128 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _12 = current_1(D)->pred;

(insn 40 39 41 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:129 -1
     (nil))

(insn 41 40 0 (set (reg/f:DI 69 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])) malloc.c:129 -1
     (nil))

;; _13 = current_1(D)->succ;

(insn 42 41 43 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:129 -1
     (nil))

(insn 43 42 0 (set (reg/f:DI 70 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 81)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:129 -1
     (nil))

;; _12->succ = _13;

(insn 44 43 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 69 [ D.3336 ])
                (const_int 8 [0x8])) [0 _12->succ+0 S8 A64])
        (reg/f:DI 70 [ D.3336 ])) malloc.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 45 44 46 26 "" [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 7->9 redirected to 10
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])
        (reg:DI 5 di [ current ])) malloc.c:121 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:122 -1
     (nil))
(insn 7 6 8 2 (set (reg:QI 59 [ D.3334 ])
        (mem/j:QI (plus:DI (reg/f:DI 71)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:122 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 60 [ D.3335 ])
        (zero_extend:SI (reg:QI 59 [ D.3334 ]))) malloc.c:122 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 72)
        (sign_extend:DI (reg:SI 60 [ D.3335 ]))) malloc.c:122 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 61 [ D.3336 ])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 72)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])) malloc.c:122 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ D.3336 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64]))) malloc.c:122 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) malloc.c:122 -1
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:123 -1
     (nil))
(insn 15 14 16 4 (set (reg:QI 62 [ D.3334 ])
        (mem/j:QI (plus:DI (reg/f:DI 73)
                (const_int 1 [0x1])) [0 current_1(D)->kval+0 S1 A8])) malloc.c:123 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 63 [ D.3335 ])
        (zero_extend:SI (reg:QI 62 [ D.3334 ]))) malloc.c:123 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:123 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 64 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 74)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:123 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 75)
        (sign_extend:DI (reg:SI 63 [ D.3335 ]))) malloc.c:123 -1
     (nil))
(insn 20 19 21 4 (set (mem/f/j:DI (plus:DI (mult:DI (reg:DI 75)
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("free_list") [flags 0x2]  <var_decl 0x7f448319eab0 free_list>)) [0 free_list S8 A64])
        (reg/f:DI 64 [ D.3336 ])) malloc.c:123 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 21 20 22 5 24 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:125 -1
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 65 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 76)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:125 -1
     (nil))
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 65 [ D.3336 ])
            (const_int 0 [0]))) malloc.c:125 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) malloc.c:125 -1
     (nil)
 -> 33)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:126 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:DI 66 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:126 -1
     (nil))
(insn 30 29 31 6 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:126 -1
     (nil))
(insn 31 30 32 6 (set (reg/f:DI 67 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])) malloc.c:126 -1
     (nil))
(insn 32 31 33 6 (set (mem/f/j:DI (plus:DI (reg/f:DI 66 [ D.3336 ])
                (const_int 16 [0x10])) [0 _9->pred+0 S8 A64])
        (reg/f:DI 67 [ D.3336 ])) malloc.c:126 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 33 32 34 7 25 "" [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:128 -1
     (nil))
(insn 36 35 37 7 (set (reg/f:DI 68 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 79)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])) malloc.c:128 -1
     (nil))
(insn 37 36 38 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 68 [ D.3336 ])
            (const_int 0 [0]))) malloc.c:128 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 47)
            (pc))) malloc.c:128 621 {*jcc_1}
     (nil)
 -> 47)
;;  succ:       8 (FALLTHRU)
;;              10

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:129 -1
     (nil))
(insn 41 40 42 8 (set (reg/f:DI 69 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80)
                (const_int 16 [0x10])) [0 current_1(D)->pred+0 S8 A64])) malloc.c:129 -1
     (nil))
(insn 42 41 43 8 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])) malloc.c:129 -1
     (nil))
(insn 43 42 44 8 (set (reg/f:DI 70 [ D.3336 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 81)
                (const_int 8 [0x8])) [0 current_1(D)->succ+0 S8 A64])) malloc.c:129 -1
     (nil))
(insn 44 43 47 8 (set (mem/f/j:DI (plus:DI (reg/f:DI 69 [ D.3336 ])
                (const_int 8 [0x8])) [0 _12->succ+0 S8 A64])
        (reg/f:DI 70 [ D.3336 ])) malloc.c:129 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              7
(code_label 47 44 48 10 23 "" [1 uses])
(note 48 47 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function merge (merge, funcdef_no=7, decl_uid=3147, cgraph_uid=7)

merge (struct s_block * current, struct s_block * buddy)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


merge (struct s_block * current, struct s_block * buddy)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 current+0 S8 A64])
        (reg:DI 5 di [ current ])) malloc.c:133 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buddy+0 S8 A64])
        (reg:DI 4 si [ buddy ])) malloc.c:133 -1
     (nil))
(note 4 3 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function free (<unset-asm-name>, funcdef_no=8, decl_uid=916, cgraph_uid=8)

free (void * ptr)
{
  struct s_block * buddy;
  struct s_block * current;
  unsigned char D.3263;
  unsigned char D.3262;
  unsigned char D.3260;
  unsigned char D.3259;
  long unsigned int D.3256;
  unsigned char D.3255;
  unsigned char D.3252;
  unsigned char _3;
  unsigned char _4;
  long unsigned int _5;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (ptr_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  goto <bb 13> (<L11>);
;;    succ:       13

;;   basic block 4, loop depth 0
;;    pred:       2
  current_2 = ptr_1(D) + 18446744073709551592;
  _3 = current_2->kval;
  if (_3 == 24)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  goto <bb 13> (<L11>);
;;    succ:       13

;;   basic block 6, loop depth 0
;;    pred:       4
  _4 = current_2->kval;
  _5 = (long unsigned int) _4;
  buddy_6 = get_buddy (current_2, _5);
  current_2->reserved = 0;
  _7 = BIT_FIELD_REF <*buddy_6, 8, 0>;
  _8 = _7 & 1;
  if (_8 == 0)
    goto <bb 7>;
  else
    goto <bb 12>;
;;    succ:       7
;;                12

;;   basic block 7, loop depth 0
;;    pred:       6
  _9 = buddy_6->kval;
  _10 = current_2->kval;
  if (_9 == _10)
    goto <bb 8>;
  else
    goto <bb 12>;
;;    succ:       8
;;                12

;;   basic block 8, loop depth 0
;;    pred:       7
  if (current_2 < buddy_6)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  merge (current_2, buddy_6);
  goto <bb 11>;
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       8
  merge (buddy_6, current_2);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       9
;;                10
  goto <bb 13> (<L11>);
;;    succ:       13

;;   basic block 12, loop depth 0
;;    pred:       6
;;                7
  push_block (current_2);
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       3
;;                5
;;                11
;;                12
<L11>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (ptr_1(D) - 1 )
Partition 2 (current_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (buddy_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )


Partition map 

Partition 0 (ptr_1(D) - 1 )


Live on entry to BB2 : ptr_1(D)  

Live on entry to BB3 : 

Live on entry to BB4 : ptr_1(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Live on entry to BB10 : 

Live on entry to BB11 : 

Live on entry to BB12 : 

Live on entry to BB13 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (ptr_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (ptr_1(D) - 1 )
Partition 1 (current_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (buddy_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )

free (void * ptr)
{
  struct s_block * buddy;
  struct s_block * current;
  unsigned char D.3263;
  unsigned char D.3262;
  unsigned char D.3260;
  unsigned char D.3259;
  long unsigned int D.3256;
  unsigned char D.3255;
  unsigned char D.3252;
  unsigned char _3;
  unsigned char _4;
  long unsigned int _5;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (ptr_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  goto <bb 13> (<L11>);
;;    succ:       13

;;   basic block 4, loop depth 0
;;    pred:       2
  current_2 = ptr_1(D) + 18446744073709551592;
  _3 = current_2->kval;
  if (_3 == 24)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  goto <bb 13> (<L11>);
;;    succ:       13

;;   basic block 6, loop depth 0
;;    pred:       4
  _4 = current_2->kval;
  _5 = (long unsigned int) _4;
  buddy_6 = get_buddy (current_2, _5);
  current_2->reserved = 0;
  _7 = BIT_FIELD_REF <*buddy_6, 8, 0>;
  _8 = _7 & 1;
  if (_8 == 0)
    goto <bb 7>;
  else
    goto <bb 12>;
;;    succ:       7
;;                12

;;   basic block 7, loop depth 0
;;    pred:       6
  _9 = buddy_6->kval;
  _10 = current_2->kval;
  if (_9 == _10)
    goto <bb 8>;
  else
    goto <bb 12>;
;;    succ:       8
;;                12

;;   basic block 8, loop depth 0
;;    pred:       7
  if (current_2 < buddy_6)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  merge (current_2, buddy_6);
  goto <bb 11>;
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       8
  merge (buddy_6, current_2);
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       9
;;                10
  goto <bb 13> (<L11>);
;;    succ:       13

;;   basic block 12, loop depth 0
;;    pred:       6
;;                7
  push_block (current_2);
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       3
;;                5
;;                11
;;                12
<L11>:
  return;
;;    succ:       EXIT

}


Partition 1: size 8 align 8
	buddy_6
Partition 0: size 8 align 8
	current_2

;; Generating RTL for gimple basic block 2

;; if (ptr_1(D) == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])
            (const_int 0 [0]))) malloc.c:148 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:148 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 29 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; current_2 = ptr_1(D) + 18446744073709551592;

(insn 16 12 17 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])) malloc.c:151 -1
     (nil))

(insn 17 16 18 (parallel [
            (set (reg:DI 68)
                (plus:DI (reg/f:DI 69)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])
            (const_int -24 [0xffffffffffffffe8]))
        (nil)))

(insn 18 17 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])
        (reg:DI 68)) malloc.c:151 -1
     (nil))

;; _3 = current_2->kval;

(insn 19 18 20 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:153 -1
     (nil))

(insn 20 19 0 (set (reg:QI 59 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 70)
                (const_int 1 [0x1])) [0 current_2->kval+0 S1 A8])) malloc.c:153 -1
     (nil))

;; if (_3 == 24)

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ D.3337 ])
            (const_int 24 [0x18]))) malloc.c:153 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:153 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 26 25 27 31 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _4 = current_2->kval;

(insn 28 27 29 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:156 -1
     (nil))

(insn 29 28 0 (set (reg:QI 60 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 71)
                (const_int 1 [0x1])) [0 current_2->kval+0 S1 A8])) malloc.c:156 -1
     (nil))

;; _5 = (long unsigned int) _4;

(insn 30 29 0 (set (reg:DI 61 [ D.3338 ])
        (zero_extend:DI (reg:QI 60 [ D.3337 ]))) malloc.c:156 -1
     (nil))

;; buddy_6 = get_buddy (current_2, _5);

(insn 31 30 32 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:156 -1
     (nil))

(insn 32 31 33 (set (reg:DI 4 si)
        (reg:DI 61 [ D.3338 ])) malloc.c:156 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 72)) malloc.c:156 -1
     (nil))

(call_insn 34 33 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_buddy") [flags 0x3]  <function_decl 0x7f44831d5500 get_buddy>) [0 get_buddy S1 A8])
            (const_int 0 [0]))) malloc.c:156 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 35 34 36 (set (reg:DI 73)
        (reg:DI 0 ax)) malloc.c:156 -1
     (nil))

(insn 36 35 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])
        (reg:DI 73)) malloc.c:156 -1
     (nil))

;; current_2->reserved = 0;

(insn 37 36 40 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:157 -1
     (nil))

(insn 40 37 41 (set (reg:QI 77)
        (mem/j:QI (reg/f:DI 74) [0 current_2->reserved+0 S1 A64])) malloc.c:157 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:QI 78)
                (and:QI (reg:QI 77)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:157 -1
     (nil))

(insn 42 41 0 (set (mem/j:QI (reg/f:DI 74) [0 current_2->reserved+0 S1 A64])
        (reg:QI 78)) malloc.c:157 -1
     (nil))

;; _7 = BIT_FIELD_REF <*buddy_6, 8, 0>;

(insn 43 42 44 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:158 -1
     (nil))

(insn 44 43 0 (set (reg:QI 62 [ D.3337 ])
        (mem:QI (reg/f:DI 79) [0 *buddy_6+0 S1 A64])) malloc.c:158 -1
     (nil))

;; _8 = _7 & 1;

(insn 45 44 0 (parallel [
            (set (reg:QI 63 [ D.3337 ])
                (and:QI (reg:QI 62 [ D.3337 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:158 -1
     (nil))

;; if (_8 == 0)

(insn 46 45 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.3337 ])
            (const_int 0 [0]))) malloc.c:158 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:158 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _9 = buddy_6->kval;

(insn 49 48 50 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:158 -1
     (nil))

(insn 50 49 0 (set (reg:QI 64 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 80)
                (const_int 1 [0x1])) [0 buddy_6->kval+0 S1 A8])) malloc.c:158 -1
     (nil))

;; _10 = current_2->kval;

(insn 51 50 52 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:158 -1
     (nil))

(insn 52 51 0 (set (reg:QI 65 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 81)
                (const_int 1 [0x1])) [0 current_2->kval+0 S1 A8])) malloc.c:158 -1
     (nil))

;; if (_9 == _10)

(insn 53 52 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3337 ])
            (reg:QI 65 [ D.3337 ]))) malloc.c:158 -1
     (nil))

(jump_insn 54 53 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:158 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; if (current_2 < buddy_6)

(insn 56 55 57 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:159 -1
     (nil))

(insn 57 56 58 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 82)
            (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64]))) malloc.c:159 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:159 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; merge (current_2, buddy_6);

(insn 60 59 61 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:160 -1
     (nil))

(insn 61 60 62 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:160 -1
     (nil))

(insn 62 61 63 (set (reg:DI 4 si)
        (reg:DI 83)) malloc.c:160 -1
     (nil))

(insn 63 62 64 (set (reg:DI 5 di)
        (reg:DI 84)) malloc.c:160 -1
     (nil))

(call_insn 64 63 0 (call (mem:QI (symbol_ref:DI ("merge") [flags 0x3]  <function_decl 0x7f44831d5c00 merge>) [0 merge S1 A8])
        (const_int 0 [0])) malloc.c:160 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 10

;; 

(code_label 67 66 68 33 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; merge (buddy_6, current_2);

(insn 69 68 70 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:162 -1
     (nil))

(insn 70 69 71 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:162 -1
     (nil))

(insn 71 70 72 (set (reg:DI 4 si)
        (reg:DI 85)) malloc.c:162 -1
     (nil))

(insn 72 71 73 (set (reg:DI 5 di)
        (reg:DI 86)) malloc.c:162 -1
     (nil))

(call_insn 73 72 0 (call (mem:QI (symbol_ref:DI ("merge") [flags 0x3]  <function_decl 0x7f44831d5c00 merge>) [0 merge S1 A8])
        (const_int 0 [0])) malloc.c:162 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 11

;; 

(code_label 74 73 75 34 "" [0 uses])

(note 75 74 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 12

;; 

(code_label 78 77 79 32 "" [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; push_block (current_2);

(insn 80 79 81 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:165 -1
     (nil))

(insn 81 80 82 (set (reg:DI 5 di)
        (reg:DI 87)) malloc.c:165 -1
     (nil))

(call_insn 82 81 0 (call (mem:QI (symbol_ref:DI ("push_block") [flags 0x3]  <function_decl 0x7f44831d5a00 push_block>) [0 push_block S1 A8])
        (const_int 0 [0])) malloc.c:165 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 13

;; <L11>:

(code_label 83 82 84 30 "" [0 uses])

(note 84 83 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 9 from 14 to 15.
Redirecting jump 24 from 14 to 15.
Forwarding edge 11->12 to 15 failed.
Redirecting jump 76 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 11->12 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])
        (reg:DI 5 di [ ptr ])) malloc.c:145 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])
            (const_int 0 [0]))) malloc.c:148 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) malloc.c:148 -1
     (nil)
 -> 11)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 9 8 10 4 (set (pc)
        (label_ref:DI 85)) malloc.c:149 659 {jump}
     (nil)
 -> 85)
;;  succ:       15 [100.0%] 

(barrier 10 9 11)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 11 10 12 5 29 "" [1 uses])
(note 12 11 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 12 17 5 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])) malloc.c:151 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg:DI 68)
                (plus:DI (reg/f:DI 69)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 ptr+0 S8 A64])
            (const_int -24 [0xffffffffffffffe8]))
        (nil)))
(insn 18 17 19 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])
        (reg:DI 68)) malloc.c:151 -1
     (nil))
(insn 19 18 20 5 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:153 -1
     (nil))
(insn 20 19 21 5 (set (reg:QI 59 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 70)
                (const_int 1 [0x1])) [0 current_2->kval+0 S1 A8])) malloc.c:153 -1
     (nil))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ D.3337 ])
            (const_int 24 [0x18]))) malloc.c:153 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) malloc.c:153 -1
     (nil)
 -> 26)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 24 23 25 6 (set (pc)
        (label_ref:DI 85)) malloc.c:154 659 {jump}
     (nil)
 -> 85)
;;  succ:       15 [100.0%] 

(barrier 25 24 26)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 26 25 27 7 31 "" [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:156 -1
     (nil))
(insn 29 28 30 7 (set (reg:QI 60 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 71)
                (const_int 1 [0x1])) [0 current_2->kval+0 S1 A8])) malloc.c:156 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 61 [ D.3338 ])
        (zero_extend:DI (reg:QI 60 [ D.3337 ]))) malloc.c:156 -1
     (nil))
(insn 31 30 32 7 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:156 -1
     (nil))
(insn 32 31 33 7 (set (reg:DI 4 si)
        (reg:DI 61 [ D.3338 ])) malloc.c:156 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 5 di)
        (reg:DI 72)) malloc.c:156 -1
     (nil))
(call_insn 34 33 35 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_buddy") [flags 0x3]  <function_decl 0x7f44831d5500 get_buddy>) [0 get_buddy S1 A8])
            (const_int 0 [0]))) malloc.c:156 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 7 (set (reg:DI 73)
        (reg:DI 0 ax)) malloc.c:156 -1
     (nil))
(insn 36 35 37 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])
        (reg:DI 73)) malloc.c:156 -1
     (nil))
(insn 37 36 40 7 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:157 -1
     (nil))
(insn 40 37 41 7 (set (reg:QI 77)
        (mem/j:QI (reg/f:DI 74) [0 current_2->reserved+0 S1 A64])) malloc.c:157 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:QI 78)
                (and:QI (reg:QI 77)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:157 -1
     (nil))
(insn 42 41 43 7 (set (mem/j:QI (reg/f:DI 74) [0 current_2->reserved+0 S1 A64])
        (reg:QI 78)) malloc.c:157 -1
     (nil))
(insn 43 42 44 7 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:158 -1
     (nil))
(insn 44 43 45 7 (set (reg:QI 62 [ D.3337 ])
        (mem:QI (reg/f:DI 79) [0 *buddy_6+0 S1 A64])) malloc.c:158 -1
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg:QI 63 [ D.3337 ])
                (and:QI (reg:QI 62 [ D.3337 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:158 -1
     (nil))
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.3337 ])
            (const_int 0 [0]))) malloc.c:158 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) malloc.c:158 -1
     (nil)
 -> 78)
;;  succ:       8 (FALLTHRU)
;;              13

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:158 -1
     (nil))
(insn 50 49 51 8 (set (reg:QI 64 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 80)
                (const_int 1 [0x1])) [0 buddy_6->kval+0 S1 A8])) malloc.c:158 -1
     (nil))
(insn 51 50 52 8 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:158 -1
     (nil))
(insn 52 51 53 8 (set (reg:QI 65 [ D.3337 ])
        (mem/j:QI (plus:DI (reg/f:DI 81)
                (const_int 1 [0x1])) [0 current_2->kval+0 S1 A8])) malloc.c:158 -1
     (nil))
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.3337 ])
            (reg:QI 65 [ D.3337 ]))) malloc.c:158 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) malloc.c:158 -1
     (nil)
 -> 78)
;;  succ:       9 (FALLTHRU)
;;              13

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:159 -1
     (nil))
(insn 57 56 58 9 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 82)
            (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64]))) malloc.c:159 -1
     (nil))
(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) malloc.c:159 -1
     (nil)
 -> 67)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:160 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:160 -1
     (nil))
(insn 62 61 63 10 (set (reg:DI 4 si)
        (reg:DI 83)) malloc.c:160 -1
     (nil))
(insn 63 62 64 10 (set (reg:DI 5 di)
        (reg:DI 84)) malloc.c:160 -1
     (nil))
(call_insn 64 63 65 10 (call (mem:QI (symbol_ref:DI ("merge") [flags 0x3]  <function_decl 0x7f44831d5c00 merge>) [0 merge S1 A8])
        (const_int 0 [0])) malloc.c:160 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(jump_insn 65 64 66 10 (set (pc)
        (label_ref 74)) -1
     (nil)
 -> 74)
;;  succ:       12

(barrier 66 65 67)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 67 66 68 11 33 "" [1 uses])
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:162 -1
     (nil))
(insn 70 69 71 11 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 buddy+0 S8 A64])) malloc.c:162 -1
     (nil))
(insn 71 70 72 11 (set (reg:DI 4 si)
        (reg:DI 85)) malloc.c:162 -1
     (nil))
(insn 72 71 73 11 (set (reg:DI 5 di)
        (reg:DI 86)) malloc.c:162 -1
     (nil))
(call_insn 73 72 74 11 (call (mem:QI (symbol_ref:DI ("merge") [flags 0x3]  <function_decl 0x7f44831d5c00 merge>) [0 merge S1 A8])
        (const_int 0 [0])) malloc.c:162 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
(code_label 74 73 75 12 34 "" [1 uses])
(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 76 75 77 12 (set (pc)
        (label_ref:DI 85)) malloc.c:159 659 {jump}
     (nil)
 -> 85)
;;  succ:       15 [100.0%] 

(barrier 77 76 78)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8
(code_label 78 77 79 13 32 "" [2 uses])
(note 79 78 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 13 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 current+0 S8 A64])) malloc.c:165 -1
     (nil))
(insn 81 80 82 13 (set (reg:DI 5 di)
        (reg:DI 87)) malloc.c:165 -1
     (nil))
(call_insn 82 81 85 13 (call (mem:QI (symbol_ref:DI ("push_block") [flags 0x3]  <function_decl 0x7f44831d5a00 push_block>) [0 push_block S1 A8])
        (const_int 0 [0])) malloc.c:165 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              4 [100.0%] 
;;              6 [100.0%] 
;;              12 [100.0%] 
(code_label 85 82 86 15 28 "" [3 uses])
(note 86 85 0 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function calloc (<unset-asm-name>, funcdef_no=9, decl_uid=863, cgraph_uid=9)

calloc (size_t number, size_t size)
{
  void * new;
  long unsigned int D.3273;
  void * D.3272;
  long unsigned int D.3269;
  void * _1;
  long unsigned int _4;
  void * _6;
  long unsigned int _7;
  void * _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = number_2(D) * size_3(D);
  new_5 = malloc (_4);
  if (new_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = 0B;
  goto <bb 5> (<L2>);
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = number_2(D) * size_3(D);
  memset (new_5, 0, _7);
  _8 = new_5;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _1 = PHI <_6(3), _8(4)>
<L2>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (number_2(D) - 2 )
Partition 3 (size_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (new_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (number_2(D) - 2 )
Partition 2 (size_3(D) - 3 )
Partition 3 (_6 - 6 )
Partition 4 (_8 - 8 )


Live on entry to BB2 : number_2(D)  size_3(D)  

Live on entry to BB3 : 

Live on entry to BB4 : number_2(D)  size_3(D)  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (number_2(D) - 2 )
Partition 2 (size_3(D) - 3 )
Partition 3 (_6 - 6 )
Partition 4 (_8 - 8 )

Coalesce list: (1)_1 & (8)_8 [map: 0, 4] : Success -> 0
Coalesce list: (1)_1 & (6)_6 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 6 8 )
Partition 1 (number_2(D) - 2 )
Partition 2 (size_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (new_5 - 5 )
Partition 5 (_7 - 7 )

calloc (size_t number, size_t size)
{
  void * new;
  long unsigned int D.3273;
  void * D.3272;
  long unsigned int D.3269;
  void * _1;
  long unsigned int _4;
  void * _6;
  long unsigned int _7;
  void * _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = number_2(D) * size_3(D);
  new_5 = malloc (_4);
  if (new_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = 0B;
  goto <bb 5> (<L2>);
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = number_2(D) * size_3(D);
  memset (new_5, 0, _7);
  _8 = new_5;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _1 = PHI <_6(3), _8(4)>
<L2>:
  return _1;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	new_5

;; Generating RTL for gimple basic block 2

;; _4 = number_2(D) * size_3(D);

(insn 7 6 8 (set (reg:DI 63)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 number+0 S8 A64])) malloc.c:172 -1
     (nil))

(insn 8 7 0 (parallel [
            (set (reg:DI 60 [ D.3340 ])
                (mult:DI (reg:DI 63)
                    (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:172 -1
     (nil))

;; new_5 = malloc (_4);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 60 [ D.3340 ])) malloc.c:172 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 11 10 12 (set (reg/f:DI 64)
        (reg:DI 0 ax)) malloc.c:172 -1
     (expr_list:REG_NOALIAS (reg/f:DI 64)
        (nil)))

(insn 12 11 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])
        (reg/f:DI 64)) malloc.c:172 -1
     (nil))

;; if (new_5 == 0B)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])
            (const_int 0 [0]))) malloc.c:173 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:173 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _6 = 0B;

(insn 16 15 0 (set (reg/f:DI 59 [ D.3339 ])
        (const_int 0 [0])) malloc.c:173 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 36 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = number_2(D) * size_3(D);

(insn 21 20 22 (set (reg:DI 65)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 number+0 S8 A64])) malloc.c:174 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg:DI 61 [ D.3340 ])
                (mult:DI (reg:DI 65)
                    (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:174 -1
     (nil))

;; memset (new_5, 0, _7);

(insn 23 22 24 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])) malloc.c:174 -1
     (nil))

(insn 24 23 25 (set (reg:DI 1 dx)
        (reg:DI 61 [ D.3340 ])) malloc.c:174 -1
     (nil))

(insn 25 24 26 (set (reg:SI 4 si)
        (const_int 0 [0])) malloc.c:174 -1
     (nil))

(insn 26 25 27 (set (reg:DI 5 di)
        (reg:DI 66)) malloc.c:174 -1
     (nil))

(call_insn 27 26 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f4483412c00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) malloc.c:174 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))

;; _8 = new_5;

(insn 28 27 0 (set (reg/f:DI 59 [ D.3339 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])) malloc.c:175 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 29 28 30 37 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 31 30 32 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 59 [ D.3339 ])) -1
     (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 33 32 0)
deleting block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 number+0 S8 A64])
        (reg:DI 5 di [ number ])) malloc.c:170 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])
        (reg:DI 4 si [ size ])) malloc.c:170 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 63)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 number+0 S8 A64])) malloc.c:172 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 60 [ D.3340 ])
                (mult:DI (reg:DI 63)
                    (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:172 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.3340 ])) malloc.c:172 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 64)
        (reg:DI 0 ax)) malloc.c:172 -1
     (expr_list:REG_NOALIAS (reg/f:DI 64)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])
        (reg/f:DI 64)) malloc.c:172 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])
            (const_int 0 [0]))) malloc.c:173 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) malloc.c:173 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 59 [ D.3339 ])
        (const_int 0 [0])) malloc.c:173 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (label_ref 29)) malloc.c:173 -1
     (nil)
 -> 29)
;;  succ:       6

(barrier 18 17 19)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 19 18 20 5 36 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:DI 65)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 number+0 S8 A64])) malloc.c:174 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:DI 61 [ D.3340 ])
                (mult:DI (reg:DI 65)
                    (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:174 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])) malloc.c:174 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 1 dx)
        (reg:DI 61 [ D.3340 ])) malloc.c:174 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 4 si)
        (const_int 0 [0])) malloc.c:174 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 5 di)
        (reg:DI 66)) malloc.c:174 -1
     (nil))
(call_insn 27 26 28 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f4483412c00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) malloc.c:174 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 28 27 29 5 (set (reg/f:DI 59 [ D.3339 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new+0 S8 A64])) malloc.c:175 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 29 28 30 6 37 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 35 6 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 59 [ D.3339 ])) -1
     (nil))
(insn 35 31 38 6 (set (reg/i:DI 0 ax)
        (reg:DI 62 [ <retval> ])) malloc.c:176 -1
     (nil))
(insn 38 35 0 6 (use (reg/i:DI 0 ax)) malloc.c:176 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function realloc (<unset-asm-name>, funcdef_no=10, decl_uid=987, cgraph_uid=10)

realloc (void * src, size_t size)
{
  struct s_block * b;
  void * dst;
  long unsigned int D.3295;
  int D.3294;
  int D.3293;
  unsigned int D.3292;
  unsigned int D.3291;
  unsigned char D.3290;
  long unsigned int D.3285;
  long unsigned int D.3284;
  unsigned int D.3283;
  int D.3282;
  int D.3281;
  unsigned char D.3280;
  void * D.3277;
  void * _1;
  void * _4;
  void * _6;
  unsigned char _7;
  int _8;
  int _9;
  unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  void * _13;
  void * _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  int _19;
  int _20;
  long unsigned int _21;
  void * _22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (src_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = malloc (size_3(D));
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  b_5 = src_2(D) + 18446744073709551592;
  if (size_3(D) == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  free (src_2(D));
  _6 = 0B;
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 6, loop depth 0
;;    pred:       4
  _7 = b_5->kval;
  _8 = (int) _7;
  _9 = 1 << _8;
  _10 = (unsigned int) _9;
  _11 = (long unsigned int) _10;
  _12 = _11 + 18446744073709551592;
  if (_12 >= size_3(D))
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _13 = src_2(D);
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 8, loop depth 0
;;    pred:       6
  dst_14 = malloc (size_3(D));
  if (dst_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _15 = 0B;
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       8
  _16 = b_5->kval;
  _17 = (unsigned int) _16;
  _18 = _17 + 4294967272;
  _19 = (int) _18;
  _20 = 1 << _19;
  _21 = (long unsigned int) _20;
  memcpy (dst_14, src_2(D), _21);
  free (src_2(D));
  _22 = dst_14;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                5
;;                7
;;                9
;;                10
  # _1 = PHI <_4(3), _6(5), _13(7), _15(9), _22(10)>
<L8>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (src_2(D) - 2 )
Partition 3 (size_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (b_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (dst_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (src_2(D) - 2 )
Partition 2 (size_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_6 - 6 )
Partition 5 (_13 - 13 )
Partition 6 (_15 - 15 )
Partition 7 (_22 - 22 )


Live on entry to BB2 : src_2(D)  size_3(D)  

Live on entry to BB3 : size_3(D)  

Live on entry to BB4 : src_2(D)  size_3(D)  

Live on entry to BB5 : src_2(D)  

Live on entry to BB6 : src_2(D)  size_3(D)  

Live on entry to BB7 : src_2(D)  

Live on entry to BB8 : src_2(D)  size_3(D)  

Live on entry to BB9 : 

Live on entry to BB10 : src_2(D)  

Live on entry to BB11 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (src_2(D) - 2 )
Partition 2 (size_3(D) - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_6 - 6 )
Partition 5 (_13 - 13 )
Partition 6 (_15 - 15 )
Partition 7 (_22 - 22 )

Coalesce list: (1)_1 & (22)_22 [map: 0, 7] : Success -> 0
Coalesce list: (1)_1 & (15)_15 [map: 0, 6] : Success -> 0
Coalesce list: (1)_1 & (13)_13 [map: 0, 5] : Success -> 0
Coalesce list: (1)_1 & (6)_6 [map: 0, 4] : Success -> 0
Coalesce list: (1)_1 & (4)_4 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 4 6 13 15 22 )
Partition 1 (src_2(D) - 2 )
Partition 2 (size_3(D) - 3 )
Partition 3 (b_5 - 5 )
Partition 4 (_7 - 7 )
Partition 5 (_8 - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (dst_14 - 14 )
Partition 11 (_16 - 16 )
Partition 12 (_17 - 17 )
Partition 13 (_18 - 18 )
Partition 14 (_19 - 19 )
Partition 15 (_20 - 20 )
Partition 16 (_21 - 21 )

realloc (void * src, size_t size)
{
  struct s_block * b;
  void * dst;
  long unsigned int D.3295;
  int D.3294;
  int D.3293;
  unsigned int D.3292;
  unsigned int D.3291;
  unsigned char D.3290;
  long unsigned int D.3285;
  long unsigned int D.3284;
  unsigned int D.3283;
  int D.3282;
  int D.3281;
  unsigned char D.3280;
  void * D.3277;
  void * _1;
  void * _4;
  void * _6;
  unsigned char _7;
  int _8;
  int _9;
  unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  void * _13;
  void * _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  int _19;
  int _20;
  long unsigned int _21;
  void * _22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (src_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = malloc (size_3(D));
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  b_5 = src_2(D) + 18446744073709551592;
  if (size_3(D) == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  free (src_2(D));
  _6 = 0B;
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 6, loop depth 0
;;    pred:       4
  _7 = b_5->kval;
  _8 = (int) _7;
  _9 = 1 << _8;
  _10 = (unsigned int) _9;
  _11 = (long unsigned int) _10;
  _12 = _11 + 18446744073709551592;
  if (_12 >= size_3(D))
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _13 = src_2(D);
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 8, loop depth 0
;;    pred:       6
  dst_14 = malloc (size_3(D));
  if (dst_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _15 = 0B;
  goto <bb 11> (<L8>);
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       8
  _16 = b_5->kval;
  _17 = (unsigned int) _16;
  _18 = _17 + 4294967272;
  _19 = (int) _18;
  _20 = 1 << _19;
  _21 = (long unsigned int) _20;
  memcpy (dst_14, src_2(D), _21);
  free (src_2(D));
  _22 = dst_14;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                5
;;                7
;;                9
;;                10
  # _1 = PHI <_4(3), _6(5), _13(7), _15(9), _22(10)>
<L8>:
  return _1;
;;    succ:       EXIT

}


Partition 1: size 8 align 8
	dst_14
Partition 0: size 8 align 8
	b_5

;; Generating RTL for gimple basic block 2

;; if (src_2(D) == 0B)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])
            (const_int 0 [0]))) malloc.c:183 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:183 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = malloc (size_3(D));

(insn 10 9 11 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])) malloc.c:184 -1
     (nil))

(insn 11 10 12 (set (reg:DI 5 di)
        (reg:DI 73)) malloc.c:184 -1
     (nil))

(call_insn 12 11 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 13 12 14 (set (reg/f:DI 74)
        (reg:DI 0 ax)) malloc.c:184 -1
     (expr_list:REG_NOALIAS (reg/f:DI 74)
        (nil)))

(insn 14 13 0 (set (reg/f:DI 59 [ D.3341 ])
        (reg/f:DI 74)) malloc.c:184 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 17 16 18 39 "" [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; b_5 = src_2(D) + 18446744073709551592;

(insn 22 18 23 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:186 -1
     (nil))

(insn 23 22 24 (parallel [
            (set (reg:DI 77)
                (plus:DI (reg/f:DI 78)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:186 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])
            (const_int -24 [0xffffffffffffffe8]))
        (nil)))

(insn 24 23 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
        (reg:DI 77)) malloc.c:186 -1
     (nil))

;; if (size_3(D) == 0)

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])
            (const_int 0 [0]))) malloc.c:188 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:188 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; free (src_2(D));

(insn 28 27 29 (set (reg:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:189 -1
     (nil))

(insn 29 28 30 (set (reg:DI 5 di)
        (reg:DI 79)) malloc.c:189 -1
     (nil))

(call_insn 30 29 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) malloc.c:189 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _6 = 0B;

(insn 31 30 0 (set (reg/f:DI 59 [ D.3341 ])
        (const_int 0 [0])) malloc.c:190 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 34 33 35 41 "" [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = b_5->kval;

(insn 36 35 37 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) malloc.c:193 -1
     (nil))

(insn 37 36 0 (set (reg:QI 60 [ D.3342 ])
        (mem/j:QI (plus:DI (reg/f:DI 80)
                (const_int 1 [0x1])) [0 b_5->kval+0 S1 A8])) malloc.c:193 -1
     (nil))

;; _8 = (int) _7;

(insn 38 37 0 (set (reg:SI 61 [ D.3343 ])
        (zero_extend:SI (reg:QI 60 [ D.3342 ]))) malloc.c:193 -1
     (nil))

;; _9 = 1 << _8;

(insn 39 38 40 (set (reg:SI 81)
        (const_int 1 [0x1])) malloc.c:193 -1
     (nil))

(insn 40 39 0 (parallel [
            (set (reg:SI 62 [ D.3343 ])
                (ashift:SI (reg:SI 81)
                    (subreg:QI (reg:SI 61 [ D.3343 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:193 -1
     (nil))

;; _10 = (unsigned int) _9;

(insn 41 40 0 (set (reg:SI 63 [ D.3344 ])
        (reg:SI 62 [ D.3343 ])) malloc.c:193 -1
     (nil))

;; _11 = (long unsigned int) _10;

(insn 42 41 0 (set (reg:DI 64 [ D.3345 ])
        (zero_extend:DI (reg:SI 63 [ D.3344 ]))) malloc.c:193 -1
     (nil))

;; _12 = _11 + 18446744073709551592;

(insn 43 42 0 (parallel [
            (set (reg:DI 65 [ D.3345 ])
                (plus:DI (reg:DI 64 [ D.3345 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:193 -1
     (nil))

;; if (_12 >= size_3(D))

(insn 44 43 45 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 65 [ D.3345 ])
            (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64]))) malloc.c:193 -1
     (nil))

(jump_insn 45 44 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:193 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _13 = src_2(D);

(insn 47 46 0 (set (reg/f:DI 59 [ D.3341 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:194 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 50 49 51 42 "" [0 uses])

(note 51 50 0 NOTE_INSN_BASIC_BLOCK)

;; dst_14 = malloc (size_3(D));

(insn 52 51 53 (set (reg:DI 82)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])) malloc.c:196 -1
     (nil))

(insn 53 52 54 (set (reg:DI 5 di)
        (reg:DI 82)) malloc.c:196 -1
     (nil))

(call_insn 54 53 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:196 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 55 54 56 (set (reg/f:DI 83)
        (reg:DI 0 ax)) malloc.c:196 -1
     (expr_list:REG_NOALIAS (reg/f:DI 83)
        (nil)))

(insn 56 55 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])
        (reg/f:DI 83)) malloc.c:196 -1
     (nil))

;; if (dst_14 == 0B)

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])
            (const_int 0 [0]))) malloc.c:197 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) malloc.c:197 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _15 = 0B;

(insn 60 59 0 (set (reg/f:DI 59 [ D.3341 ])
        (const_int 0 [0])) malloc.c:197 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 63 62 64 43 "" [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; _16 = b_5->kval;

(insn 65 64 66 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) malloc.c:198 -1
     (nil))

(insn 66 65 0 (set (reg:QI 66 [ D.3342 ])
        (mem/j:QI (plus:DI (reg/f:DI 84)
                (const_int 1 [0x1])) [0 b_5->kval+0 S1 A8])) malloc.c:198 -1
     (nil))

;; _17 = (unsigned int) _16;

(insn 67 66 0 (set (reg:SI 67 [ D.3346 ])
        (zero_extend:SI (reg:QI 66 [ D.3342 ]))) malloc.c:198 -1
     (nil))

;; _18 = _17 + 4294967272;

(insn 68 67 0 (parallel [
            (set (reg:SI 68 [ D.3346 ])
                (plus:SI (reg:SI 67 [ D.3346 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:198 -1
     (nil))

;; _19 = (int) _18;

(insn 69 68 0 (set (reg:SI 69 [ D.3343 ])
        (reg:SI 68 [ D.3346 ])) malloc.c:198 -1
     (nil))

;; _20 = 1 << _19;

(insn 70 69 71 (set (reg:SI 85)
        (const_int 1 [0x1])) malloc.c:198 -1
     (nil))

(insn 71 70 0 (parallel [
            (set (reg:SI 70 [ D.3343 ])
                (ashift:SI (reg:SI 85)
                    (subreg:QI (reg:SI 69 [ D.3343 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:198 -1
     (nil))

;; _21 = (long unsigned int) _20;

(insn 72 71 0 (set (reg:DI 71 [ D.3345 ])
        (sign_extend:DI (reg:SI 70 [ D.3343 ]))) malloc.c:198 -1
     (nil))

;; memcpy (dst_14, src_2(D), _21);

(insn 73 72 74 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:198 -1
     (nil))

(insn 74 73 75 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) malloc.c:198 -1
     (nil))

(insn 75 74 76 (set (reg:DI 1 dx)
        (reg:DI 71 [ D.3345 ])) malloc.c:198 -1
     (nil))

(insn 76 75 77 (set (reg:DI 4 si)
        (reg:DI 86)) malloc.c:198 -1
     (nil))

(insn 77 76 78 (set (reg:DI 5 di)
        (reg:DI 87)) malloc.c:198 -1
     (nil))

(call_insn 78 77 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f4483412600 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) malloc.c:198 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))

;; free (src_2(D));

(insn 79 78 80 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:199 -1
     (nil))

(insn 80 79 81 (set (reg:DI 5 di)
        (reg:DI 88)) malloc.c:199 -1
     (nil))

(call_insn 81 80 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) malloc.c:199 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _22 = dst_14;

(insn 82 81 0 (set (reg/f:DI 59 [ D.3341 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) malloc.c:200 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; <L8>:

(code_label 83 82 84 40 "" [0 uses])

(note 84 83 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 85 84 86 (set (reg:DI 72 [ <retval> ])
        (reg/f:DI 59 [ D.3341 ])) -1
     (nil))

(jump_insn 86 85 87 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 87 86 0)
deleting block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])
        (reg:DI 5 di [ src ])) malloc.c:179 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])
        (reg:DI 4 si [ size ])) malloc.c:179 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])
            (const_int 0 [0]))) malloc.c:183 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) malloc.c:183 -1
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])) malloc.c:184 -1
     (nil))
(insn 11 10 12 4 (set (reg:DI 5 di)
        (reg:DI 73)) malloc.c:184 -1
     (nil))
(call_insn 12 11 13 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 4 (set (reg/f:DI 74)
        (reg:DI 0 ax)) malloc.c:184 -1
     (expr_list:REG_NOALIAS (reg/f:DI 74)
        (nil)))
(insn 14 13 15 4 (set (reg/f:DI 59 [ D.3341 ])
        (reg/f:DI 74)) malloc.c:184 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 83)) malloc.c:184 -1
     (nil)
 -> 83)
;;  succ:       12

(barrier 16 15 17)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 17 16 18 5 39 "" [1 uses])
(note 18 17 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 18 23 5 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:186 -1
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:DI 77)
                (plus:DI (reg/f:DI 78)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:186 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])
            (const_int -24 [0xffffffffffffffe8]))
        (nil)))
(insn 24 23 25 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])
        (reg:DI 77)) malloc.c:186 -1
     (nil))
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])
            (const_int 0 [0]))) malloc.c:188 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) malloc.c:188 -1
     (nil)
 -> 34)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:189 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (reg:DI 79)) malloc.c:189 -1
     (nil))
(call_insn 30 29 31 6 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) malloc.c:189 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 6 (set (reg/f:DI 59 [ D.3341 ])
        (const_int 0 [0])) malloc.c:190 -1
     (nil))
(jump_insn 32 31 33 6 (set (pc)
        (label_ref 83)) malloc.c:190 -1
     (nil)
 -> 83)
;;  succ:       12

(barrier 33 32 34)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 34 33 35 7 41 "" [1 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) malloc.c:193 -1
     (nil))
(insn 37 36 38 7 (set (reg:QI 60 [ D.3342 ])
        (mem/j:QI (plus:DI (reg/f:DI 80)
                (const_int 1 [0x1])) [0 b_5->kval+0 S1 A8])) malloc.c:193 -1
     (nil))
(insn 38 37 39 7 (set (reg:SI 61 [ D.3343 ])
        (zero_extend:SI (reg:QI 60 [ D.3342 ]))) malloc.c:193 -1
     (nil))
(insn 39 38 40 7 (set (reg:SI 81)
        (const_int 1 [0x1])) malloc.c:193 -1
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg:SI 62 [ D.3343 ])
                (ashift:SI (reg:SI 81)
                    (subreg:QI (reg:SI 61 [ D.3343 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:193 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 63 [ D.3344 ])
        (reg:SI 62 [ D.3343 ])) malloc.c:193 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 64 [ D.3345 ])
        (zero_extend:DI (reg:SI 63 [ D.3344 ]))) malloc.c:193 -1
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:DI 65 [ D.3345 ])
                (plus:DI (reg:DI 64 [ D.3345 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:193 -1
     (nil))
(insn 44 43 45 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 65 [ D.3345 ])
            (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64]))) malloc.c:193 -1
     (nil))
(jump_insn 45 44 46 7 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) malloc.c:193 -1
     (nil)
 -> 50)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg/f:DI 59 [ D.3341 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:194 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (label_ref 83)) malloc.c:194 -1
     (nil)
 -> 83)
;;  succ:       12

(barrier 49 48 50)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 50 49 51 9 42 "" [1 uses])
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg:DI 82)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S8 A64])) malloc.c:196 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 5 di)
        (reg:DI 82)) malloc.c:196 -1
     (nil))
(call_insn 54 53 55 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) malloc.c:196 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 9 (set (reg/f:DI 83)
        (reg:DI 0 ax)) malloc.c:196 -1
     (expr_list:REG_NOALIAS (reg/f:DI 83)
        (nil)))
(insn 56 55 57 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])
        (reg/f:DI 83)) malloc.c:196 -1
     (nil))
(insn 57 56 58 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])
            (const_int 0 [0]))) malloc.c:197 -1
     (nil))
(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) malloc.c:197 -1
     (nil)
 -> 63)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg/f:DI 59 [ D.3341 ])
        (const_int 0 [0])) malloc.c:197 -1
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (label_ref 83)) malloc.c:197 -1
     (nil)
 -> 83)
;;  succ:       12

(barrier 62 61 63)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 63 62 64 11 43 "" [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 b+0 S8 A64])) malloc.c:198 -1
     (nil))
(insn 66 65 67 11 (set (reg:QI 66 [ D.3342 ])
        (mem/j:QI (plus:DI (reg/f:DI 84)
                (const_int 1 [0x1])) [0 b_5->kval+0 S1 A8])) malloc.c:198 -1
     (nil))
(insn 67 66 68 11 (set (reg:SI 67 [ D.3346 ])
        (zero_extend:SI (reg:QI 66 [ D.3342 ]))) malloc.c:198 -1
     (nil))
(insn 68 67 69 11 (parallel [
            (set (reg:SI 68 [ D.3346 ])
                (plus:SI (reg:SI 67 [ D.3346 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:198 -1
     (nil))
(insn 69 68 70 11 (set (reg:SI 69 [ D.3343 ])
        (reg:SI 68 [ D.3346 ])) malloc.c:198 -1
     (nil))
(insn 70 69 71 11 (set (reg:SI 85)
        (const_int 1 [0x1])) malloc.c:198 -1
     (nil))
(insn 71 70 72 11 (parallel [
            (set (reg:SI 70 [ D.3343 ])
                (ashift:SI (reg:SI 85)
                    (subreg:QI (reg:SI 69 [ D.3343 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) malloc.c:198 -1
     (nil))
(insn 72 71 73 11 (set (reg:DI 71 [ D.3345 ])
        (sign_extend:DI (reg:SI 70 [ D.3343 ]))) malloc.c:198 -1
     (nil))
(insn 73 72 74 11 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:198 -1
     (nil))
(insn 74 73 75 11 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) malloc.c:198 -1
     (nil))
(insn 75 74 76 11 (set (reg:DI 1 dx)
        (reg:DI 71 [ D.3345 ])) malloc.c:198 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 4 si)
        (reg:DI 86)) malloc.c:198 -1
     (nil))
(insn 77 76 78 11 (set (reg:DI 5 di)
        (reg:DI 87)) malloc.c:198 -1
     (nil))
(call_insn 78 77 79 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f4483412600 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) malloc.c:198 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 79 78 80 11 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 src+0 S8 A64])) malloc.c:199 -1
     (nil))
(insn 80 79 81 11 (set (reg:DI 5 di)
        (reg:DI 88)) malloc.c:199 -1
     (nil))
(call_insn 81 80 82 11 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) malloc.c:199 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 82 81 83 11 (set (reg/f:DI 59 [ D.3341 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) malloc.c:200 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              6
;;              8
;;              10
;;              11 (FALLTHRU)
(code_label 83 82 84 12 40 "" [4 uses])
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 89 12 (set (reg:DI 72 [ <retval> ])
        (reg/f:DI 59 [ D.3341 ])) -1
     (nil))
(insn 89 85 92 12 (set (reg/i:DI 0 ax)
        (reg:DI 72 [ <retval> ])) malloc.c:201 -1
     (nil))
(insn 92 89 0 12 (use (reg/i:DI 0 ax)) malloc.c:201 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=11, decl_uid=3166, cgraph_uid=11)

main ()
{
  void * D;
  void * C;
  void * B;
  void * A;
  int D.3297;
  int _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  A_1 = malloc (70);
  B_2 = malloc (35);
  C_3 = malloc (80);
  D_4 = malloc (60);
  free (B_2);
  free (D_4);
  free (C_3);
  A_5 = calloc (2, 70);
  B_6 = realloc (A_5, 150);
  free (A_5);
  free (B_6);
  _7 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _7;
;;    succ:       EXIT

}



Partition map 

Partition 1 (A_1 - 1 )
Partition 2 (B_2 - 2 )
Partition 3 (C_3 - 3 )
Partition 4 (D_4 - 4 )
Partition 5 (A_5 - 5 )
Partition 6 (B_6 - 6 )
Partition 7 (_7 - 7 )


Partition map 

Partition 0 (A_1 - 1 )
Partition 1 (B_2 - 2 )
Partition 2 (A_5 - 5 )
Partition 3 (B_6 - 6 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) B_2 <-> B_6
(2147483646) A_1 <-> A_5

Partition map 

Partition 0 (A_1 - 1 )
Partition 1 (B_2 - 2 )
Partition 2 (A_5 - 5 )
Partition 3 (B_6 - 6 )

Coalesce list: (2)B_2 & (6)B_6 [map: 1, 3] : Success -> 1
Coalesce list: (1)A_1 & (5)A_5 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (A_1 - 1 5 )
Partition 1 (B_2 - 2 6 )
Partition 2 (C_3 - 3 )
Partition 3 (D_4 - 4 )
Partition 4 (_7 - 7 )

main ()
{
  void * D;
  void * C;
  void * B;
  void * A;
  int D.3297;
  int _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  A_1 = malloc (70);
  B_2 = malloc (35);
  C_3 = malloc (80);
  D_4 = malloc (60);
  free (B_2);
  free (D_4);
  free (C_3);
  A_5 = calloc (2, 70);
  B_6 = realloc (A_5, 150);
  free (A_5);
  free (B_6);
  _7 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _7;
;;    succ:       EXIT

}


Partition 3: size 8 align 8
	D_4
Partition 2: size 8 align 8
	C_3
Partition 1: size 8 align 8
	B_2
Partition 0: size 8 align 8
	A_1

;; Generating RTL for gimple basic block 2

;; A_1 = malloc (70);

(insn 5 4 6 (set (reg:DI 5 di)
        (const_int 70 [0x46])) test.c:5 -1
     (nil))

(call_insn 6 5 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 7 6 8 (set (reg/f:DI 61)
        (reg:DI 0 ax)) test.c:5 -1
     (expr_list:REG_NOALIAS (reg/f:DI 61)
        (nil)))

(insn 8 7 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])
        (reg/f:DI 61)) test.c:5 -1
     (nil))

;; B_2 = malloc (35);

(insn 9 8 10 (set (reg:DI 5 di)
        (const_int 35 [0x23])) test.c:6 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:6 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 11 10 12 (set (reg/f:DI 62)
        (reg:DI 0 ax)) test.c:6 -1
     (expr_list:REG_NOALIAS (reg/f:DI 62)
        (nil)))

(insn 12 11 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
        (reg/f:DI 62)) test.c:6 -1
     (nil))

;; C_3 = malloc (80);

(insn 13 12 14 (set (reg:DI 5 di)
        (const_int 80 [0x50])) test.c:7 -1
     (nil))

(call_insn 14 13 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 15 14 16 (set (reg/f:DI 63)
        (reg:DI 0 ax)) test.c:7 -1
     (expr_list:REG_NOALIAS (reg/f:DI 63)
        (nil)))

(insn 16 15 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 C+0 S8 A64])
        (reg/f:DI 63)) test.c:7 -1
     (nil))

;; D_4 = malloc (60);

(insn 17 16 18 (set (reg:DI 5 di)
        (const_int 60 [0x3c])) test.c:8 -1
     (nil))

(call_insn 18 17 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:8 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 19 18 20 (set (reg/f:DI 64)
        (reg:DI 0 ax)) test.c:8 -1
     (expr_list:REG_NOALIAS (reg/f:DI 64)
        (nil)))

(insn 20 19 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 D+0 S8 A64])
        (reg/f:DI 64)) test.c:8 -1
     (nil))

;; free (B_2);

(insn 21 20 22 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) test.c:9 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 65)) test.c:9 -1
     (nil))

(call_insn 23 22 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; free (D_4);

(insn 24 23 25 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 D+0 S8 A64])) test.c:10 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg:DI 66)) test.c:10 -1
     (nil))

(call_insn 26 25 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:10 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; free (C_3);

(insn 27 26 28 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 C+0 S8 A64])) test.c:11 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg:DI 67)) test.c:11 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; A_5 = calloc (2, 70);

(insn 30 29 31 (set (reg:DI 4 si)
        (const_int 70 [0x46])) test.c:13 -1
     (nil))

(insn 31 30 32 (set (reg:DI 5 di)
        (const_int 2 [0x2])) test.c:13 -1
     (nil))

(call_insn 32 31 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x3]  <function_decl 0x7f4483430800 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) test.c:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 33 32 34 (set (reg/f:DI 68)
        (reg:DI 0 ax)) test.c:13 -1
     (expr_list:REG_NOALIAS (reg/f:DI 68)
        (nil)))

(insn 34 33 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])
        (reg/f:DI 68)) test.c:13 -1
     (nil))

;; B_6 = realloc (A_5, 150);

(insn 35 34 36 (set (reg:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])) test.c:14 -1
     (nil))

(insn 36 35 37 (set (reg:DI 4 si)
        (const_int 150 [0x96])) test.c:14 -1
     (nil))

(insn 37 36 38 (set (reg:DI 5 di)
        (reg:DI 69)) test.c:14 -1
     (nil))

(call_insn 38 37 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x3]  <function_decl 0x7f4483441400 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) test.c:14 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 39 38 40 (set (reg:DI 70)
        (reg:DI 0 ax)) test.c:14 -1
     (nil))

(insn 40 39 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
        (reg:DI 70)) test.c:14 -1
     (nil))

;; free (A_5);

(insn 41 40 42 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])) test.c:15 -1
     (nil))

(insn 42 41 43 (set (reg:DI 5 di)
        (reg:DI 71)) test.c:15 -1
     (nil))

(call_insn 43 42 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:15 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; free (B_6);

(insn 44 43 45 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) test.c:16 -1
     (nil))

(insn 45 44 46 (set (reg:DI 5 di)
        (reg:DI 72)) test.c:16 -1
     (nil))

(call_insn 46 45 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:16 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; _7 = 0;

(insn 47 46 0 (set (reg:SI 59 [ D.3347 ])
        (const_int 0 [0])) test.c:18 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 48 47 49 45 "" [0 uses])

(note 49 48 0 NOTE_INSN_BASIC_BLOCK)

;; return _7;

(insn 50 49 51 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.3347 ])) test.c:18 -1
     (nil))

(jump_insn 51 50 52 (set (pc)
        (label_ref 0)) test.c:18 -1
     (nil))

(barrier 52 51 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 70 [0x46])) test.c:5 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 61)
        (reg:DI 0 ax)) test.c:5 -1
     (expr_list:REG_NOALIAS (reg/f:DI 61)
        (nil)))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])
        (reg/f:DI 61)) test.c:5 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (const_int 35 [0x23])) test.c:6 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:6 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 62)
        (reg:DI 0 ax)) test.c:6 -1
     (expr_list:REG_NOALIAS (reg/f:DI 62)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
        (reg/f:DI 62)) test.c:6 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (const_int 80 [0x50])) test.c:7 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 63)
        (reg:DI 0 ax)) test.c:7 -1
     (expr_list:REG_NOALIAS (reg/f:DI 63)
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 C+0 S8 A64])
        (reg/f:DI 63)) test.c:7 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (const_int 60 [0x3c])) test.c:8 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x3]  <function_decl 0x7f448343e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) test.c:8 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 64)
        (reg:DI 0 ax)) test.c:8 -1
     (expr_list:REG_NOALIAS (reg/f:DI 64)
        (nil)))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 D+0 S8 A64])
        (reg/f:DI 64)) test.c:8 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) test.c:9 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 65)) test.c:9 -1
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 D+0 S8 A64])) test.c:10 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 66)) test.c:10 -1
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:10 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 C+0 S8 A64])) test.c:11 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 67)) test.c:11 -1
     (nil))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (const_int 70 [0x46])) test.c:13 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (const_int 2 [0x2])) test.c:13 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x3]  <function_decl 0x7f4483430800 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) test.c:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 2 (set (reg/f:DI 68)
        (reg:DI 0 ax)) test.c:13 -1
     (expr_list:REG_NOALIAS (reg/f:DI 68)
        (nil)))
(insn 34 33 35 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])
        (reg/f:DI 68)) test.c:13 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])) test.c:14 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (const_int 150 [0x96])) test.c:14 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 69)) test.c:14 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x3]  <function_decl 0x7f4483441400 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) test.c:14 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 39 38 40 2 (set (reg:DI 70)
        (reg:DI 0 ax)) test.c:14 -1
     (nil))
(insn 40 39 41 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])
        (reg:DI 70)) test.c:14 -1
     (nil))
(insn 41 40 42 2 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 A+0 S8 A64])) test.c:15 -1
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 71)) test.c:15 -1
     (nil))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:15 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 2 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 B+0 S8 A64])) test.c:16 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 72)) test.c:16 -1
     (nil))
(call_insn 46 45 47 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x3]  <function_decl 0x7f4483436d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) test.c:16 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 47 46 50 2 (set (reg:SI 59 [ D.3347 ])
        (const_int 0 [0])) test.c:18 -1
     (nil))
(insn 50 47 54 2 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.3347 ])) test.c:18 -1
     (nil))
(insn 54 50 57 2 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) test.c:19 -1
     (nil))
(insn 57 54 0 2 (use (reg/i:SI 0 ax)) test.c:19 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

